@media print {
    .tripleColumnContainer{
    /* padding: 0 20vw; */
    width: 100%;
    /* height: 100vh; */
    /* display: flex;
    flex-direction: column;
    justify-content: flex-start; */
    display: block;
    /* align-items: center;
    justify-content: center; */
    
   
    }
    .videoPlayer{
        display: none;
    }
    .playList{
        display: none;
    }
    .notes{
        /* background-color: rgb(183, 236, 238); */
        width: 100%;
        float: none;
        overflow-y: visible;
        display: block;
        position: absolute;
        top:0;

        /* height:100%; */
        /* grid-area:notes; */
    }
}
@media screen {
    .tripleColumnContainer{
    /* padding: 0 20vw; */
    width: 90%;
    /* height: 100vh; */
    display: grid;
      grid-template-columns: [start-c] 1fr 1fr 1fr [end-c];
      /* grid-template-columns: 1fr 1fr; */

      /* grid-template-areas: 
      'left center right' */

        /* 'left center right' */
          /* 'nav-wrapper nav-wrapper' */
          /* 'left-column right-column' */
      /* ; */
    }
    .videoPlayer{
        background-color: rgb(238, 183, 183);
        width: 100%;
        height:100%;
        /* grid-area:video; */
    }
    .playList{
        background-color: rgb(183, 238, 199);
        width: 100%;
        height:100%;
        /* grid-area:playlist; */
    }
    .notes{
        background-color: rgb(183, 236, 238);
        width: 100%; /* this will probably eventually need to be changed such that it's an explicit width unit like vw so that the ellipsis cut off on videoTitle will work */
        max-width: 40vw;
        height:100%;
        /* grid-area:notes; */
    }
}

@media screen and (min-width: 1200px){
    .tripleColumnContainer{
        width: 90%;
        max-width: 90vw;
        
        height: 100vh;
        display: grid;
          grid-template-columns: [start-c] 5fr [center] 3fr [end-c];
          /* grid-template-columns: [start-r] 1fr [center] 1fr [end-r]; */
    
          /* grid-template-columns: 1fr 1fr; */
    
          grid-template-areas: 
          'video    notes'
          'playlist notes'
          ;
    }

    .videoPlayer{
        grid-area:video;
    }
    .playList{
        grid-area:playlist;
    }
    .notes{
        grid-area:notes;
    }


    
}

.notes .noteSectionVideoTitle{
    color: black;
    font-size: 2rem;
    width: 100%;
    max-width: 50vw; /* this may change later when I change the widths of all sections */
    /* overflow-x: hidden; */
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    text-align: center;
    margin: 1rem 0;
}

.notes .noteSectionVideoLink{
    display: none;
}

@media print {
    .notes .noteSectionVideoTitle{
        font-size: 2.5rem;
        width: 100%;
        max-width: 100%; /*   must be set to off set screen version 
                              unless I put a tag on that one. 
                              100% to fill page width                */
        /* overflow-x: hidden; */
        /* white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis; */
        text-align: center;
        margin: 1rem 0;
    }
    .notes .noteSectionVideoLink{
        display: block;
        font-size: 1rem;
        width: 100%;
        text-align: center;
    }
}

/* give a height minus the navbar once i design it */
/* mobile should be a collapsible thing that kinda resembles youtube playlist except, instead of comments and recs, you get your notetaking station */





/* #list ul {
    overflow: auto;
    height: 128px;
  } */

  ul {
    overflow: auto;
    height: 80vh;
    padding: 0;
  }

  .centerListItem {
    color: red;
  }


  .ListItem {
    height: fit-content;
    min-height: 20vh;
    /* width: 99%; */
    width: calc(100% -  (1px * 2 ));
    border: 1px solid black;

    /* text-align: start; */
    display: flex;
    flex-direction: column;
  }
  .ListItem button{
      width: fit-content;
  }

  @media print {
    ul {
        overflow-y: visible;
        height: fit-content;
        display: block;
        position: relative;
        top:0;

        /* height: 80vh; */
        /* padding: 0; */
      }
    .ListItem {
        height: fit-content;
        min-height: 20vh;
        width: 95vw;
        /* width: 100%; */
        border: 1px solid black;
        margin: 1rem auto;
        border-radius: 10px;
        display: block;
        
      }
  }


  .noteInputField{
    /* white-space: pre-line;  */
    /* whitespace trimmed to single whitespace */
    white-space: pre-wrap;
    /* all whitespace preserved */
  }

  .titleDiv{
      padding: .1rem;
      margin: 0;
      display: flex;
      justify-content: center;
  }
  .noteTitleContainer{
      color: rgb(87, 178, 206);
      margin: .5rem 0 1rem 0;
      /* transition: all cubic-bezier(0.075, 0.82, 0.165, 1) 3s; */
      transition: all cubic-bezier(0.075, 0.82, 0.165, 1) 1s;
      display: flex;
      flex: row;
      justify-content: center;
      align-items: center;
      cursor: pointer;


  }
  .noteTitleContainer .noteTitle{
    /* width: 80%; */
    flex: 1;
    /* width: fit-content; */
    /* max-width: 20vw;  */
    /* I will make this explicit for now so that the div doesn't stretch too large. This must change when the note section gets a determined width */
    white-space: nowrap;
    /* overflow: hidden; */
    /* text-overflow: ellipsis; */
    /* text-align: center; */
    display: inline-block;
    /* vertical-align: middle; */
    /* background-color: transparent; */
    font-size: inherit;
    color: inherit;
    font-family: inherit;

  }
  .noteTitleContainer .noteTitle:disabled{
    /* box-sizing: content-box; */
    display: inline-block;
    

    width: min-content;
    max-width: 60%;
    white-space: nowrap;
    text-indent: 0%;


    overflow: hidden; /*    Goal:   make it so that the title is like a plain div 
                                    with ellipsis that is not scrollable in the disabled state
                            Realization:    Overflow hidden will not do anything unless display is either 
                                            inline-block or block and pointer-events are set to none          */
    text-overflow: ellipsis; /* elipsis needs overflow hidden to work */
    pointer-events: none; /* IMPORTANT:  this tells the div not to pay attention if the user tries to scroll horizontally on the inpiut field.
                                        The input field is different than the average field in that the overflow property will not simply crop the underlying text.
                                        It will instead just cover it but the length underneath is the same and that text can be moved back and forth if you scroll.
                                        Thus, you must do this to disable interacting with it at all.   
                            Reference: https://stackoverflow.com/questions/10900210/overflow-hidden-and-input-text-scrolling-in-google-chrome 
                            Note:   This reference warns against possible disadvantages. One, I discovered is the inability to highlight the text by character.
                                    However, in this case, the input field in question only has this applied when it's disabled and only meant for viewing. So, I'm finding this to be mostly okay.                                          */
    /* text-align: center; */
    /* vertical-align: middle; */
    background-color: transparent;
    border: none;
    font-size: inherit;
    color: inherit;
    cursor: pointer; /* disabled by pointer-events: none; */
    
    /* appearance: none; */
    /* overflow: hidden !important; */
    /* line-height: 0px; */
    /* border: none;
    appearance: none;
    text-rendering: inherit; */

  }
  /* .noteTitle:disabled { pointer-events:none; } */

  .noteTitleContainer .timestamp, .noteTitleContainer .seekText{
    /* max-width: 70%; */
    width: fit-content;
    /* text-align: center; */
    display: inline-block;
    /* vertical-align: middle; */
    position: relative;

  }
  .noteTitleContainer .seekText{
    /* max-width: 70%; */
    width: 1px;
    /* width: fit-content; */
    /* overflow: hidden; */
    white-space: nowrap;

    /* text-align: center; */
    display: inline-block;
    /* vertical-align: middle; */
    position: relative;
    font-size: 1rem;
    
    opacity: 0;
    transition: all cubic-bezier(0.075, 0.82, 0.165, 1) .5s,
                opacity cubic-bezier(0.075, 0.82, 0.165, 1) .3s;

  }
  .noteTitleContainer:hover{
      color: blue;
      /* transition: all cubic-bezier(0.6, -0.28, 0.735, 0.045) .2s; */
      transition: all cubic-bezier(0.075, 0.82, 0.165, 1) .1s;


  }
  .noteTitleContainer:hover  .seekText{
    /* width: fit-content; */
    width: 4rem;

    /* color: red; */
    opacity: 1;
    /* transition: all cubic-bezier(0.6, -0.28, 0.735, 0.045) .2s; */
    transition: all cubic-bezier(0.075, 0.82, 0.165, 1) .2s;
    /* transition: cubic-bezier(0.785, 0.135, 0.15, 0.86); */
    /* transition: width  3s; */


}
 

  .noteMsgEditor{
    resize: none;
    /* resize: vertical; */
    /* height: 100%; */
    /* height: fit-content; */
    border:0;
    /* width:100%; */
    width:85%;
    /* text-indent: 30%; */

    margin: 0;
    /* flex: 1; */
    font-size: 1.2rem;

    /* padding:0; */
    padding: .8rem 0;

    /* padding: .5rem 1.5rem; */
    /* overflow-y: visible; */
    background-color: transparent;
    caret-color: rgb(24, 23, 93);
  }
  .noteMsgEditor:focus{
      border: none;
      -webkit-tap-highlight-color: rgba(255, 255, 255, 0); 
      -webkit-tap-highlight-color: transparent; 
       /* i.e. Nexus5/Chrome and Kindle Fire HD 7'' */
      outline: none;
  }
  .noteMsgEditorContainer{

    /* height: 15vw; */
    display: flex;
    justify-content: center;
    resize: vertical;
    min-height: 15vw;
    border-top:     1px solid rgba(0, 0, 0, 0.246);
    border-bottom:  1px solid rgba(0, 0, 0, 0.246);
    width:100%;
    /* text-indent: 30%; */

    margin: 0;
    /* flex: 1; */
    /* padding: .8rem 0; */
    /* padding: .5rem 1.5rem; */
    /* overflow-y: visible; */
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.089);

  }
  .noteMsgEditorContainer:focus-within{

    /* background-color: blue; */
    outline: auto;
    outline-color: rgb(226, 141, 43);

    -webkit-tap-highlight-color: rgb(219, 150, 46); 

    /* background-color: rgba(0, 0, 255, 0.267); */
    /* i.e. Nexus5/Chrome and Kindle Fire HD 7'' */
    /* outline: thick; */
  }
  .noteMsgDisplay{
    /* word-wrap: normal; */
    word-wrap: break-word;
    /*  <pre> tag defines preformatted text. 
        It is used to display code blocks since it preserves spaces and line breaks.
        If the line is large, then the <pre> tag won’t wrap it by default. 
        To wrap it, we need to use CSS.
        Source: https://www.tutorialspoint.com/How-do-I-wrap-text-in-a-pre-tag-in-HTML    */
    width: calc(100% - (1.5rem * 2) - (1px * 2 ));
    margin: 0;
    white-space: pre-wrap;
    white-space: -moz-pre-wrap;
    white-space: -pre-wrap;
    white-space: -o-pre-wrap;
    flex: 1;
    text-align: start;
    padding: .5rem 1.5rem;
    /* padding:  0 1.5rem .5rem 1.5rem; */
    font-size: 1.2rem;
    border-top: 1px solid rgba(0, 0, 0, 0.089);

    
  }