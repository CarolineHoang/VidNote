{"version":3,"sources":["Containers/testVid.mp4","DownloadFolder/testFile.txt","logo.svg","Components/VideoPlayer.js","Components/Playlist.js","Components/Note.js","Containers/NoteContainer.js","Components/DraggablePlaylistVideo.js","Components/DraggablePlaylist.js","Containers/DraggablePlaylistContainer.js","Components/NoteTaker.js","Components/DraggableList.js","Containers/PageContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","VideoPlayer","React","Component","props","getTime","console","log","player","videoNode","currentTime","setState","state","videoRef","bind","generateControlButton","this","videojs","playerObj","setVidRef","dispose","actionFunction","buttonName","buttonClass","controlText","position","Button","getComponent","newButton","extend","constructor","apply","arguments","addClass","handleClick","playlist","registerComponent","getChild","addChild","data-vjs-player","ref","node","className","Note","editing","text_disabled","noteTitle_disabled","text","note","noteTitle","noteSectionVideoId","videoId","lastEnabled","saved","videoCategory","handleToggleState","handleSave","handleDelete","acceptSpecialSymbol","convertDisableStatusToValue","updateTimeStamp","formatTimeStamp","nextProps","i","refs","toString","scrollIntoView","block","behavior","index","e","stateVal","dType","overrideObj","toggleEditingFeild","noteEditProperty","setStateOpts","changeNote","undefined","data","_ref","value","deleteNote","target","bookmarked","commands","keyCode","preventDefault","String","fromCharCode","shiftKey","getCurrVidTime","totalSecs","noteInfo","hr","min","sec","Math","trunc","href","ytVidId","formattedTS","startTime","date","lastUpdated","Intl","DateTimeFormat","year","month","day","hour","minute","second","formatToParts","additionalClasses","onClick","setCurrVidTime","title","hidden","onChange","handleInputChange","onKeyDown","onDoubleClick","noteId","updateTimeFunc","handleBookmark","NoteContainer","currentNoteId","noteRefArr","handleShow","findMostRecentNoteIdx","idx","notesArr","itemList","notes","length","command","refArr","mRIdx","current","newRef","createRef","push","videoName","category","url","map","item","key","DraggablePlayListVideo","testConsoleLog","changeCurrentVideo","message","videoIdxPos","currentItem","video","videoInfo","src","thumbnail","srcset","currentlyPlayingId","name","DraggablePlayList","getItems","k","id","content","text2","changeListEntries","sPlaylist","pPlaylist","newPlaylist","addListEntry","removeListEntry","currentPlaylist","items","videoIndexObj","forEach","found","split","loaderStyle","contentStyle","playerRef","onDragEnd","prevProps","test","autoadvance","result","destination","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","provided","snapshot","droppableProps","innerRef","isDraggingOver","draggableId","draggableProps","style","isDragging","draggableStyle","dragHandleProps","onMouseDown","stopPropagation","deleteVideo","placeholder","DraggablePlaylistContainer","open","togglePlaylistVisibility","NoteTaker","currentNoteTime","createdTime","addNote","newState","Date","now","Meta","maxVideoId","maxNoteId","noteData","type","fileObj","bookmarkTotal","endTime","created","drawn","images","testVideo2","settings","warnings","reverse_shift_enter_submit","show_undo","ACCEPTED_FILE_EXTENSIONS","valid","zip","JSZip","Videos","folder","file","JSON","stringify","getFileExtenstion","fileName","substr","lastIndexOf","PageContainer","newNote","newVideoLink","meta","backupMeta","info","uploadedVideos","currPlayingVid","currPlayingVidId","lastPlayingVidId","fileContents","lastStartTime","setVideoRef","getVideoRef","uploadFile","addToPlaylist","findNewNoteIdx","recursiveBinarySearch","YouTubeGetID","loadProject","downloadProject","loadBackupProject","printPlayer","on","currIndex","currentIndex","metaCopy","lastIndex","lastTime","secs","newStartTime","newNoteTitle","newText","newBookmarked","arrLength","newdata","noteIdx","dataToUpdate","fileTarget","vidName","pop","files","URL","createObjectURL","parseInt","ct","arr","start","end","mid","floor","val","fileArr","metaIdx","ext","fileStatus","fr","FileReader","onloadend","resultJSON","parse","readAsText","gdrive","MetaFiles","generateAsync","then","filename","FileSaver","saveAs","playlistJSON","videoJSON","sources","poster","media","autoplay","controls","directory","webkitdirectory","mozdirectory","data-src","data-filename","data-sitename","defaults","window","print","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.70b7271f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/testVid.b60f6e67.mp4\";","module.exports = __webpack_public_path__ + \"static/media/testFile.a8f4de44.txt\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport videojs from 'video.js';\nimport YoutubeVid from 'videojs-youtube';\nimport playlistJS from 'videojs-playlist';\nimport playlistUI from 'videojs-playlist-ui';\nimport '../Styles/videoStyles.css';\n\n\n// Code for the addition of custom buttons to the video control bar are adaped from Gino's CodePen: 'Videojs - Playlist 5.16.0'\n// It can be found here: https://codepen.io/onigetoc/pen/wJRyvZ   \n// I changed it to be more modular and executable from a method.      \n// I found it under this issue on GitHub: https://github.com/videojs/video.js/issues/3473#issuecomment-291667994\n\n\n\n\n\n\n// import '../../node_modules/videojs-playlist-ui/dist/videojs-playlist-ui.vertical.css';\nimport Playlist from './Playlist';\n\n\n//  const getTime = ()=>{\n//     console.log(this.player , this.videoNode , this.player.currentTime())\n//   }\nexport default class VideoPlayer extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= { \n            currentTime: 0,\n            videoRef : null\n        }\n        this.getTime = this.getTime.bind(this);\n        this.generateControlButton = this.generateControlButton.bind(this)\n\n        // this.testFunc = this.testFunc.bind(this);\n    }\n \n\n//   testFunc(){\n//       console.log(\"lol\")\n//   }\nshouldComponentUpdate(){\n    return false\n}\n  getTime = ()=>{\n    // this.props.setVidRef(this.player)\n    console.log(this.player , this.videoNode , this.player.currentTime())\n    console.log(\"player ref from button:\", this.player, \"    .... end\")\n    this.setState({currentTime: this.player.currentTime()})\n  }\n//   getCurrentTime = ()=>{\n//     // this.props.setVidRef(this.player)\n//     console.log(this.player , this.videoNode , this.player.currentTime())\n//     console.log(\"player ref from button:\", this.player, \"    .... end\")\n//     this.setState({currentTime: this.player.currentTime()})\n//   }\n  componentDidMount(props) {\n    // instantiate Video.js\n    console.log(\"video mounted\")\n    this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\n    //   console.log('onPlayerReady', this, this.props.test)\n      console.log('onPlayerReady', this)\n    //   this.getTime()\n    \n    //   this.props.setVidRef(this.player)\n\n  \n    });\n\n    //create a player variable that can be referenced in the button generators\n    var playerObj = this.player\n\n    // ADDING CUSTOM BUTTONS TO THE CONTROL BAR (credits at top):\n    // parameters: playerObj, buttonName, buttonClass, controlText , barPositionIndex\n    /* ADD PREVIOUS */\n    this.generateControlButton(playerObj, 'previous', 'PrevButton', 'icon-angle-left', \"Previous\", 0 )\n    /* ADD NEXT */\n    this.generateControlButton(playerObj, 'next', 'NextButton', 'icon-angle-right', \"Next\" , 2)\n    //\n        // var Button = videojs.getComponent('Button');\n        // var PrevButton = videojs.extend(Button, {\n        //     //constructor: function(player, options) {\n        //     constructor: function() {\n        //     Button.apply(this, arguments);\n        //     //this.addClass('vjs-chapters-button');\n        //     this.addClass('icon-angle-left');\n        //     this.controlText(\"Previous\");\n        //     },\n        \n        //     handleClick: function() {\n        //     // console.log('click', playerObj,  this.player.playlist());\n        //     console.log('click', playerObj);\n        //     // this.player.playlist.previous();\n        //     playerObj.playlist.previous();\n        //     }\n        // });\n        // videojs.registerComponent('PrevButton', PrevButton);\n        // this.player.getChild('controlBar').addChild('PrevButton', {}, 0);\n\n    //\n        // var NextButton = videojs.extend(Button, {\n        // //constructor: function(player, options) {\n        // constructor: function() {\n        //     Button.apply(this, arguments);\n        //     //this.addClass('vjs-chapters-button');\n        //     this.addClass('icon-angle-right');\n        //     this.controlText(\"Next\");\n        // },\n        \n        //     handleClick: function() {\n        //     // console.log('click', playerObj,  this.player.playlist());\n        //     console.log('click', playerObj);\n        //     // this.player.playlist.previous();\n        //     playerObj.playlist.next();\n        //     }\n        // });\n        // videojs.registerComponent('NextButton', NextButton);\n        // this.player.getChild('controlBar').addChild('NextButton', {}, 2);\n\n\n                            //\n                                // // this.testFunc()\n                                // this.player.playlist([{\n                                //     // sources: [{\n                                //     //   src: 'http://media.w3.org/2010/05/sintel/trailer.mp4',\n                                //     //   type: 'video/mp4'\n                                //     // }],\n                                //     sources: [{\n                                //         src: 'https://www.youtube.com/watch?v=3WQHDUYk310&feature=emb_rel_pause',\n                                //         type: 'video/youtube'\n                                //     }],\n                                //     poster: 'http://media.w3.org/2010/05/sintel/poster.png' //this is the image that shows while it loads I think\n                                // }, \n                                // {\n                                    \n                                //     sources: [{\n                                //         src: 'https://www.youtube.com/watch?v=voFRslp8d60&t=17s',\n                                //         type: 'video/youtube'\n                                //     }],\n                                //     poster: 'http://media.w3.org/2010/05/sintel/poster.png'\n                                // }, \n                                // //   {\n                                // //     sources: [{\n                                // //       src: 'https://www.youtube.com/watch?v=U9DyHthJ6LA&feature=emb_rel_pause',\n                                // //       type: 'video/youtube'\n                                // //     }],\n                                // //     poster: 'http://media.w3.org/2010/05/bunny/poster.png'\n                                // //   }, \n                                // ]);\n                                // console.log(\"the playlist1: \" ,this.player.playlist())\n                                // var currentPlaylist =  this.player.playlist()\n                                // currentPlaylist.push( {\n                                //     sources: [{\n                                //     src: 'https://www.youtube.com/watch?v=U9DyHthJ6LA&feature=emb_rel_pause',\n                                //     type: 'video/youtube'\n                                //     }],\n                                //     poster: 'http://media.w3.org/2010/05/bunny/poster.png'\n                                // }\n                                // )\n                                // this.player.playlist(currentPlaylist)\n                                // console.log(\"the playlist2: \" ,this.player.playlist())\n\n                                // // this.player.playlist(currentPlaylist)\n\n                                \n                                // // Play through the playlist automatically.\n                                // this.player.playlist.autoadvance(0);\n                                // this.player.playlistUi();\n    // this.setState({videoRef: this.player }, ())\n    this.props.setVidRef(this.player)\n    console.log(\"player2: \", this.player)\n  }\n\n   // destroy player on unmount\n   componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose()\n    // this.player.destroy()\n    }\n  }\n  generateControlButton(playerObj, actionFunction, buttonName, buttonClass, controlText , position){\n    \n    var Button = videojs.getComponent('Button');\n    // Extend default control button\n    var newButton = videojs.extend(Button, {\n        constructor: function() {\n        Button.apply(this, arguments);\n        this.addClass(buttonClass);\n        this.controlText(controlText);\n        },\n    \n        handleClick: function() {\n            // console.log('click', playerObj,  this.player.playlist());\n            console.log('click', playerObj);\n            // change the video\n            playerObj.playlist[actionFunction]();\n        }\n    });\n    // Register the new component\n    videojs.registerComponent(buttonName, newButton);\n    this.player.getChild('controlBar').addChild(buttonName, {}, position);\n  }\n\n  // wrap the player in a div with a `data-vjs-player` attribute\n  // so videojs won't create additional wrapper in the DOM\n  // see https://github.com/videojs/video.js/pull/3856\n  render() {\n    // this.props.setVidRef(this.player)\n    // console.log(\"player ref:\", this.player)\n\n    console.log(\"player3: \", this.player)\n    \n    return (\n      <div>\t\n        <div data-vjs-player>\n          <video ref={ node => this.videoNode = node } className=\"video-js mainVideo\"></video>\n        </div>\n        {/* <div class=\"vjs-playlist\"></div> */}\n        {/* <Playlist player={this.player} test= 'this should APPEAR' /> */}\n        {/* <button onClick={this.getTime}>Get Current Time:</button><span>Time:{this.state.currentTime}</span> */}\n        {/* {this.props.setVidRef(this.player)} */}\n        {/* {this.props.test} */}\n      </div>\n    )\n  }\n}","import React from 'react';\nimport videojs from 'video.js';\nimport YoutubeVid from 'videojs-youtube';\nimport playlistJS from 'videojs-playlist';\nimport playlistUI from 'videojs-playlist-ui';\nimport '../Styles/videoStyles.css';\n\n// import '../../node_modules/videojs-playlist-ui/dist/videojs-playlist-ui.vertical.css';\n// import '../../node_modules/videojs-playlist-ui/dist/videojs-playlist-ui.css';\nimport '../Styles/custom-playlist-styles.css'\n\n\n\n//  const getTime = ()=>{\n//     console.log(this.props.player , this.videoNode , this.props.player.currentTime())\n//   }\nexport default class Playlist extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= { \n            playerRef : null,\n            currentPlaylist : this.props.playlist\n        }\n        // this.testFunc = this.testFunc.bind(this);\n        this.printPlayer = this.printPlayer.bind(this);\n    }\n    shouldComponentUpdate(nextProps, nextState){\n        //originally wrote this to prevent rerender because I thought this was what kept resetting the playlist to the start\n        // that is false, it was the lack of a second parameter in the componentDidUpdate this.props.player.playlist() function\n        // I am still leaving this however as to make runtime more optimized, but if there is an issue, I should come back here and delete this:\n        console.log(\"compare it2:\", nextProps.playlist , this.props.playlist , nextProps.playlist.length  !== this.props.playlist.length)\n        return (nextProps.playlist.length  !== this.props.playlist.length)\n        // if (this.state.currentPlaylist !== this.nextState.currentPlaylist ){\n        //     console.log(\"Component Updating\", this.state.currentPlaylist, nextState.currentPlaylist)\n        //     return true\n        // }\n        // else{\n            // return false\n        // }\n        \n    }\n    componentDidUpdate(prevProps) {\n        // if(prevProps.playlist  !== this.props.playlist ) {\n        //   this.setState({currentPlaylist : this.props.playlist }, ()=> {\n              console.log(\"The Current Playlist UPDATED:\", this.props.playlist)\n              this.props.player.playlist(this.props.playlist, this.props.player.playlist.currentItem()); //this second parameter must be set or the playlist will jump to start once updated (default for the second parameter [index of first video to play] is 0 )\n\n        //     });\n        // }\n      }\n    componentDidMount(){\n        // if (this.state.playerRef !== this.props.player || this.state.playerRef == null ){\n        //     this.setState ({ playerRef : this.props.player})\n        // }\n        // if (this.state.currentPlaylist !== this.props.playlist ){\n        //     this.setState({\n        //         currentPlaylist : this.props.playlist \n        //     })\n            \n        // }\n        console.log(\"hit!!\")\n        console.log(\"The Current Playlist:\", this.props.playlist)\n\n        console.log(\"player: \", this.props.player, this.props.test)\n        if (this.props.player !== undefined && this.props.player != null){\n\n            // this.props.player.playlist([]);\n            this.props.player.playlist(this.props.playlist);\n\n            // console.log(\"the playlist1: \" ,this.props.player.playlist())\n            // var currentPlaylist =  this.props.player.playlist()\n            // var currentPlaylist =  this.state.currentPlaylist\n            // currentPlaylist.push( {\n            //     sources: [{\n            //       src: 'https://www.youtube.com/watch?v=U9DyHthJ6LA&feature=emb_rel_pause',\n            //       type: 'video/youtube'\n            //     }],\n            //     poster: 'http://media.w3.org/2010/05/bunny/poster.png'\n            //   }\n            // )\n            // this.props.player.playlist(currentPlaylist)\n            console.log(\"the playlist2: \" ,this.props.player.playlist())\n        \n            // this.props.player.playlist(currentPlaylist)\n        \n               \n              // Play through the playlist automatically.\n              this.props.player.playlist.autoadvance(0);\n              this.props.player.playlistUi();\n        }\n        \n    }\n    printPlayer(){\n        console.log(this.state.playerRef)\n    }\n    \n  \n\n  // wrap the player in a div with a `data-vjs-player` attribute\n  // so videojs won't create additional wrapper in the DOM\n  // see https://github.com/videojs/video.js/pull/3856\n  render() {\n    // this.props.setVidRef(this.props.player)\n    // console.log(\"player ref:\", this.props.player)\n    // if (this.state.playerRef !== this.props.player || this.state.playerRef == null ){\n    //     this.setState ({ playerRef : this.props.player})\n    // }\n    \n    return (\n      <div className=\"playlistContainer\">\t\n        <div className=\"vjs-playlist\"></div>\n        <div onClick={this.printPlayer}>print Player</div>\n        {/* {this.props.playlist.map((video, i)=>{\n            // return video.name\n            playlist\n        })\n\n        } */}\n        {/* <div className=\"playlistTopBar\">asdc</div> */}\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport '../Styles/page-container-styles.css'\n// import VideoPlayer from \"../Components/VideoPlayer.js\";\n// import YoutubeVid from 'videojs-youtube';\n\n// Scrolling view functionality is inspired and based off of CodePen:\n// Name: 'React: scrollIntoView'\n// Pen Owner: 'Hirokazu Takatama'\n\n\nexport default class Note extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state= {\n            editing: false,\n            text_disabled: true,\n            noteTitle_disabled: true,\n            text: this.props.note.text,\n            noteTitle: this.props.note.noteTitle !== null ? this.props.note.noteTitle : this.props.note.text ,\n            noteSectionVideoId : this.props.videoId,\n            lastEnabled:  { state : null, saved: true } ,\n            videoCategory : this.props.videoCategory,\n            // bookmarked : this.props.note.bookmarked\n        }\n        this.handleToggleState = this.handleToggleState.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        // this.handleBookmark = this.handleBookmark.bind(this);\n        this.acceptSpecialSymbol = this.acceptSpecialSymbol.bind(this);\n        this.convertDisableStatusToValue = this.convertDisableStatusToValue.bind(this);\n        this.updateTimeStamp = this.updateTimeStamp.bind(this);\n        this.formatTimeStamp = this.formatTimeStamp.bind(this);\n    }\n    componentDidUpdate(nextProps){\n        //if the section rendered is different from the last (we changed videos or we're loading a different set of notes) then update all disabled states to close them all\n        if (nextProps.videoId !== this.props.videoId){\n            this.setState({\n                              text_disabled: true,\n                              noteTitle_disabled : true\n                          })\n            console.log(\"updating...\")\n        }\n        else{\n            console.log(\"not updating...\", )\n        }\n    }\n    // componentDidMount(){\n    // }\n    handleShow(i) {\n        console.log(this.refs, i)\n        console.log(this.refs[toString(i)])\n        // this.setState({index: i});\n        \n        // this.refs[i].scrollIntoView({block: 'end', behavior: 'smooth'});\n        // console.log(this.refs[i].)\n        // this.refs[i].attributes.push(\"centerListItem\")\n        this.refs[i].scrollIntoView({block: 'center', behavior: 'smooth'});\n\n        this.setState({index: i})\n      }\n\n    handleToggleState(e, stateVal){\n        // var value = '' \n       \n        this.setState(\n            {\n            [stateVal]: !this.state[stateVal],\n            // lastEnabled: this.state[stateVal] ? { state : stateVal, saved: true } : { state : stateVal, saved: false } \n            lastEnabled: { state : stateVal, saved: false } \n            }, \n            ()=>{\n                console.log(\"Toggling \", stateVal, this.state[stateVal])\n            }\n        )\n    }\n    convertDisableStatusToValue(dType){\n        \n        switch( dType ){\n            case 'text_disabled':\n                return 'text'\n                // debugger;\n                // break;\n            case 'noteTitle_disabled':\n                return 'noteTitle'\n                // break;\n            default:\n                break;\n        }\n    }\n    handleSave( e, overrideObj = null  ,  toggleEditingFeild = true ){\n        //note, lastEnabledData is a object with properties 'state' and 'saved' in the same fashion as the \n\n        var lastEnabled = this.state.lastEnabled\n\n\n        // this.props.changeNote(\"changing note\")\n        console.log(\"saving....\", lastEnabled, lastEnabled.state ,this.state[lastEnabled.state] , this.state.text)\n        var noteEditProperty =  this.convertDisableStatusToValue(lastEnabled.state)\n    \n        var setStateOpts = {}\n        if (toggleEditingFeild){\n            setStateOpts = {\n                [lastEnabled.state]: !this.state[lastEnabled.state], \n                lastEnabled : {\n                                    state: this.state.lastEnabled.state, \n                                    saved: true\n                                } \n            }\n        }\n        \n\n        // this.handleToggleState(e, lastEnabled.state)\n        this.setState( setStateOpts ,  ()=>{\n            console.log(`text_disabled: `, this.state[noteEditProperty], noteEditProperty , overrideObj )\n            this.props.changeNote(  /* noteInfo     */  this.props.note, \n                                    /* newdata      */  overrideObj !== null && overrideObj !== undefined ? overrideObj.data : this.state[noteEditProperty] , \n                                    /* noteIdx      */  this.props._ref , \n                                    /* dataToUpdate */  overrideObj !== null && overrideObj !== undefined ? overrideObj.value : noteEditProperty  , \n                                    /* videoId      */  this.props.videoId)\n\n\n        } )\n        // this.props.changeNote(this.props.note, this.state[noteEditProperty] , this.props.videoId, noteEditProperty  )\n\n\n\n        // this.setState({\n        //     text_disabled: true\n        // })\n    }\n    handleDelete( e, overrideObj = null  ){\n        var setStateOpts = {\n                                editing: false,\n                                text_disabled: true,\n                                noteTitle_disabled: true,\n                                lastEnabled:  { state : null, saved: true } \n                            }\n        this.setState( setStateOpts ,  ()=>{\n            this.props.deleteNote(  /* noteIdx      */  this.props._ref , \n                                    /* videoId      */  this.props.videoId)\n        } )\n    }\n    handleInputChange(e, stateVal){\n        // var eVal = e.target.value\n        // in order to see the most current change in printing, you must include the print statment in the setState function and there must be in an anonymnous arrow function    >>> https://forum.freecodecamp.org/t/solved-this-setstate-is-updating-state-after-console-log/206985/2\n        // if we use [] around the property name, we can use ES6 computed property names >>> https://stackoverflow.com/questions/29280445/reactjs-setstate-with-a-dynamic-key-name\n        this.setState({[stateVal]: e.target.value},  ()=>{console.log(`new ${stateVal} value: `, this.state[stateVal])} )\n\n    }\n    handleBookmark( e , overrideObj = null){\n        console.log(\"bookmark: \" , this.props.note.bookmarked)\n\n        this.handleSave( e, {value: \"bookmarked\" , data: !this.props.note.bookmarked }, false ) \n        \n            // this.props.changeNote(  /* noteInfo     */  this.props.note, \n            //                         /* newdata      */  overrideObj !== null && overrideObj !== undefined ? overrideObj.data : this.state[noteEditProperty] , \n            //                         /* noteIdx      */  this.props._ref , \n            //                         /* dataToUpdate */  overrideObj !== null && overrideObj !== undefined ? overrideObj.value : noteEditProperty  , \n            //                         /* videoId      */  this.props.videoId)\n\n\n    }\n    acceptSpecialSymbol(e, commands, stateVal){\n\n        if (e.keyCode === 9 && commands[\"include_tabs\"] ){\n            e.preventDefault(); //prevent tab from focusing the next dom object\n\n        // this.setState({[stateVal]: e.target.value},  ()=>{console.log(`new ${stateVal} value: `, this.state[stateVal])} )\n            this.setState({[stateVal]: this.state[stateVal]+ String.fromCharCode(9)},  ()=>{console.log(`new ${stateVal} value: `, this.state[stateVal])} )\n        }\n        if (e.keyCode === 13 && e.shiftKey && commands[\"SE_submit\"] ){ // reference for 'e.shiftKey: http://jsfiddle.net/McH8q/28/#save\n            // this.handleSave(e, this.state.lastEnabled );\n            this.handleSave(e);\n        }\n        if (e.keyCode === 13 && commands[\"E_submit\"] ){\n            // this.handleSave(e, this.state.lastEnabled );\n            this.handleSave(e);\n\n        }\n\n    }\n\n    updateTimeStamp(e, getCurrVidTime){\n        this.handleSave( e, {value: \"startTime\" , data: getCurrVidTime() }, false ) \n    }\n\n    formatTimeStamp(totalSecs, noteInfo){\n        var hr = 0\n        var min = 0 \n        var sec = 0\n        if (totalSecs < 60){ //if it's under a minute\n            sec = Math.trunc(totalSecs)\n            return <div><div className={this.props.videoCategory === \"web\"  ?  \"timestamp\": \"\"}>0:{sec < 10 ? '0' : ''}{sec}</div>{ (this.props.videoCategory === \"web\"  ?    <a href={`https://youtu.be/${this.props.ytVidId}?t=${sec}`} className=\"printOnlyTimeStamp\"  >0:{sec < 10 ? '0' : ''}{sec}</a> : \"\" )}</div>\n        }\n        else if (totalSecs < 60*60){ //if it's under an hour\n            min = Math.trunc(totalSecs/60)\n            sec = Math.trunc(totalSecs - (min*60))\n            return <div>{min}:{sec < 10 ? '0' : ''}{sec}</div>\n        }\n        else if (totalSecs < 60*60*24){//if it's under a day\n            hr =  Math.trunc(totalSecs/60/60)\n            min = Math.trunc((totalSecs - (hr*60*60))/60)\n            sec = Math.trunc(totalSecs - (hr*60*60) - (min*60))\n            return <div>{hr}:{min < 10 ? '0' : ''}{min}:{sec < 10 ? '0' : ''}{sec}</div>\n        }\n        else{//if it's been a day and no video should be that long\n            return <div>Error: MAX_VIDEO_LENGTH EXCEEDED</div>\n        }\n    }\n    //TODO: different update time formats depending on how long it's been\n    formatUpdate(sec){\n        if (sec < 60){ //if it's under a minute\n\n        }\n        else if (sec < 60*60){ //if it's under an hour\n\n        }\n        else if (sec < 60*60*24){//if it's under a day\n\n        }\n        else{//if it's been a day\n\n        }\n        return\n    }\n    \n    render() {\n\n        if (this.props.videoCategory !== this.state.videoCategory){\n            this.setState({\n                videoCategory : this.props.videoCategory\n            })\n        }\n\n        var noteInfo = this.props.note\n        var formattedTS = this.formatTimeStamp(noteInfo.startTime, noteInfo)\n        // var ts = Math.round((noteInfo.startTime + Number.EPSILON) * 100) / 100\n\n        // const date = new Date('2010-08-05')\n        const date = noteInfo.lastUpdated\n        const dateTimeFormat = new Intl.DateTimeFormat('en', { year: 'numeric', month: 'short', day: '2-digit' , hour: 'numeric', minute: 'numeric', second: 'numeric',  } ) \n        const [{ value: month },,{ value: day },,{ value: year },,{value : hour},, { value : minute},, {value : second}] = dateTimeFormat.formatToParts(date ) \n\n        console.log(`${day}-${month}-${year }`)\n        console.log(`${day}👠${month}👢${year}`) // just for fun\n       \n        return(\n                    <div className={'ListItem '+ this.props.additionalClasses} >\n                        <div onClick={() => this.props.setCurrVidTime(noteInfo.startTime) } className=\"noteTitleContainer\" title={this.state.noteTitle}>\n                            <div hidden={!this.state.noteTitle_disabled} className= {this.state.noteTitle_disabled ? \"seekText titleDiv\" : ''}  >Go to:</div>\n\n                            <div className= \"titleDiv\" >{formattedTS}</div>\n                            <div className=\"  titleDiv\" >&nbsp;|&nbsp;</div>\n                            <input  hidden={this.state.noteTitle_disabled} \n                                    onChange={( e, state ) => this.handleInputChange( e, 'noteTitle')} \n                                    onKeyDown={ (e, state) => this.acceptSpecialSymbol(e, { \"E_submit\" : true } , null)} \n                                    value={this.state.noteTitle}  \n                                    className= {!this.state.noteTitle_disabled ? \"noteTitleEditor titleDiv\"  : ''}   >\n                            </input>\n                            <div    hidden ={!this.state.noteTitle_disabled} \n                                    onDoubleClick={this.state.lastEnabled.saved  ? ( e, state ) => this.handleToggleState( e, 'noteTitle_disabled') : null } \n                                    className= {this.state.noteTitle_disabled ? \"noteTitleDisplay titleDiv\"  : ''} >\n                                        {this.state.noteTitle}\n                            </div> \n                            <br/>\n                        </div>\n                        <pre    hidden={!this.state.text_disabled} \n                                onDoubleClick={this.state.lastEnabled.saved  ? ( e, state ) => this.handleToggleState( e, 'text_disabled') : null} \n                                className=\"noteMsgDisplay\" >\n                                    {noteInfo.text}\n                        </pre> \n                        Video ID: {this.props.videoId} ||| Note ID {noteInfo.noteId}\n                        {/* the className must be conditional because display flex undos this hidden attribute */}\n                        <div    hidden={this.state.text_disabled } \n                                className= {!this.state.text_disabled ? \"noteMsgEditorContainer\" : ''} >\n                                    <textarea   onChange={( e, state ) => this.handleInputChange( e, 'text')} \n                                                onKeyDown={ (e, state) => this.acceptSpecialSymbol(e, {'include_tabs' : true , \"SE_submit\" : true }, 'text')} \n                                                value={this.state.text} \n                                                className=\"noteMsgEditor\">\n                                    </textarea>\n                        </div>\n\n\n                        <button onClick={(e, updateTimeFunc )=>this.updateTimeStamp(e , this.props.getCurrVidTime)} >Update Timestamp</button>\n                        <button     onClick={( e, state ) => this.handleBookmark( e, '')}>\n                                        Bookmark Note <div hidden={!noteInfo.bookmarked}><i className=\"fas fa-bookmark\"></i> </div> <div hidden={noteInfo.bookmarked}><i className=\"far fa-bookmark\"></i></div>\n                        </button>\n                        <button     onClick={( e, state ) => this.handleDelete( e, '')}>\n                                        Delete Note\n                        </button>\n                        <button     hidden={!this.state.lastEnabled.saved} \n                                    onClick={( e, state ) => this.handleToggleState( e, 'text_disabled')}>\n                                        Toggle TextArea\n                        </button>\n                        <button     hidden={!this.state.lastEnabled.saved} \n                                    onClick={( e, state ) => this.handleToggleState( e, 'noteTitle_disabled')}>\n                                        Toggle Title\n                        </button>\n                        <button     hidden={this.state.lastEnabled.state === null || this.state.lastEnabled.saved} \n                                    onClick={this.handleSave}>\n                                        Save\n                        </button>\n                        <div className=\"lastUpdatedTimestamp\" >Last Edited: {`${month} ${day}, ${year } at ${hour}:${minute}:${second }`}</div>\n                        {/* <div>{this.state.videoCategory !== null && this.state.videoCategory !== undefined && this.state.videoCategory & \"hello\"}</div> */}\n                        \n                        {/* <select>\n                            <option value=\"grapefruit\">Grapefruit</option>\n                            <option value=\"lime\">Lime</option>\n                            <option selected value=\"coconut\">Coconut</option>\n                            <option value=\"mango\">Mango</option>\n                        </select> */}\n                    </div>\n        );\n    }\n}\n","import React from \"react\";\nimport '../Styles/page-container-styles.css';\nimport Note from \"../Components/Note\";\n\n// Scrolling view functionality is inspired and based off of CodePen:\n// Name: 'React: scrollIntoView'\n// Pen Owner: 'Hirokazu Takatama'\n\nexport default class NoteContainer extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state= {\n            index: 0,\n            currentNoteId: 0,\n            noteRefArr : []\n        }\n        this.handleShow = this.handleShow.bind(this);\n        this.findMostRecentNoteIdx =this.findMostRecentNoteIdx.bind(this)\n    }\n    componentDidUpdate(){\n        // console.log(\"new note list2:\", this.props.videoId,  this.props.itemList.videoId)\n\n    }\n    componentDidMount(){\n        // console.log(\"new note list:\", this.props.videoId,  this.props.itemList.videoId)\n    }\n\n    findMostRecentNoteIdx(){\n        var currentTime = this.props.getCurrVidTime()\n        var idx=0;\n        var notesArr = this.props.itemList.notes\n        if (notesArr.length === 0){\n            return -1 //error: there are no notes\n        }\n        if (notesArr.length === 1){\n            return 0\n        }\n        while (idx < notesArr.length){\n            console.log(\"time comparisons: \", notesArr[idx].startTime,  currentTime)\n\n            if(notesArr.length > 1 && idx < notesArr.length-1 ){\n                console.log(\"time comparisons: \", notesArr[idx].startTime,  currentTime)\n                if ( notesArr[idx].startTime <= currentTime && notesArr[idx+1].startTime > currentTime ){\n                    return idx\n                }\n            }\n            idx+=1\n        }\n        return notesArr.length-1\n    }\n    handleShow(command, i, refArr ) {\n        console.log(\"ref arrs: \" ,  refArr, this.state.noteRefArr)\n        if (command === \"current\"){\n           var mRIdx = this.findMostRecentNoteIdx()\n           if (mRIdx>0){\n                // this.refs[mRIdx].scrollIntoView({block: 'center', behavior: 'smooth'});\n                refArr[mRIdx].current.scrollIntoView({block: 'center', behavior: 'smooth'});\n                console.log('mRIdx: ', mRIdx)\n                this.setState({index: mRIdx})\n           }\n        }\n        else{\n            console.log(this.refs, i)\n            console.log(this.refs[toString(i)])\n            // this.setState({index: i});\n            \n            // this.refs[i].scrollIntoView({block: 'end', behavior: 'smooth'});\n            // console.log(this.refs[i].)\n            // this.refs[i].attributes.push(\"centerListItem\")\n            console.log('the refs: ', this.refs, this.refs[1] )\n            refArr[i].current.scrollIntoView({block: 'center', behavior: 'smooth'});\n\n            this.setState({index: i})\n        }\n      }\n\n      \n      \n      \n      render() {\n        var notes = this.props.itemList !== undefined ?  this.props.itemList.notes  : null;\n        console.log(\"ITEMMMMS\", notes)\n\n        var idx = 0;\n        var newRef  = null;\n        var refArr  = [];\n        while (notes != null && idx <notes.length){\n            newRef = React.createRef()\n            refArr.push(newRef)\n            idx+=1\n        }\n        // if ( notes.length !=this.state.noteRefArr.length){\n        //     this.setState({\n        //         noteRefArr : refArr\n        //     })\n        // }\n        return(\n                <div>\n                    {notes != null && <div className=\"noteSectionVideoTitle\">{this.props.itemList.videoName != null ? this.props.itemList.videoName : 'Untitled Video'}</div>}\n                    {notes != null && this.props.itemList.category === 'web' ? <div className=\"noteSectionVideoLink\">Watch Now: <a href={this.props.itemList.url}>{this.props.itemList.url}</a></div>  : <div className=\"noteSectionVideoLink\">Uploaded File</div>}\n                    {this.props.itemList!= null && this.props.itemList.videoId}\n                    {/* {this.state.index} */}\n                    {/* this must be a arrow function in order to bind the this so that we can use state in the map function  */}\n                    <ul>\n                        {notes != null &&  notes.map((item, i) => {\n                        return (\n                            <div ref={refArr[i]} key={\"note\"+i} >\n                                <Note   _ref={i} note={item} \n                                        additionalClasses={ i === this.state.index ? 'centerListItem' : ''}\n                                        setCurrVidTime = {this.props.setCurrVidTime } \n                                        changeNote = {this.props.changeNote } \n                                        deleteNote = {this.props.deleteNote } \n                                        videoId = {this.props.itemList.videoId} \n                                        videoCategory = {this.props.itemList.category} \n                                        url = {this.props.itemList.url} \n                                        ytVidId = {this.props.itemList.ytVidId}  \n                                        getCurrVidTime = {this.props.getCurrVidTime}\n                                        // bookmarked = {this.props.bookmarked} \n                                        >\n                                        \n                                </Note>\n                            </div>\n                        ) \n                    })}\n{/* \n                    { renderNoteList(notes)} */}\n                  </ul>\n                  <button onClick={this.handleShow.bind(this, \"\", 0, refArr)}>0</button>\n                  <button onClick={this.handleShow.bind(this, \"\", 2, refArr)}>2</button>\n                  <button onClick={this.handleShow.bind(this, \"\", 50, refArr)}>50</button>\n                  <button onClick={this.handleShow.bind(this, \"\", 99, refArr)}>99</button>\n                  <button onClick={this.handleShow.bind(this, \"current\", 0  , refArr)}>Current Note</button>\n                  {this.state.index}\n                </div>\n        );\n    }\n}\n","import React from 'react';\nimport videojs from 'video.js';\nimport YoutubeVid from 'videojs-youtube';\nimport playlistJS from 'videojs-playlist';\nimport \"../Styles/draggable-playlist-video-style.css\"\n\nvar exampleData = {\n    videoId: 'videoJSON.videoId',\n    name: 'videoJSON.videoName',\n    sources: [{\n        src: 'videoJSON.url',\n        type: 'videoJSON.type'\n    }],\n    poster: 'http://media.w3.org/2010/05/sintel/poster.png',\n    thumbnail: [\n        {\n          srcset: 'https://helpx.adobe.com/content/dam/help/en/stock/how-to/visual-reverse-image-search-v2_297x176.jpg',\n          type: 'image/jpeg',\n          media: '(min-width: 400px;)'\n        //   media: 'max-width: 40px;'\n        },\n        {\n          src: 'https://helpx.adobe.com/content/dam/help/en/stock/how-to/visual-reverse-image-search-v2_297x176.jpg'\n        }\n      ]\n}\n\n\n\nexport default class DraggablePlayListVideo extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= { \n        }\n        this.testConsoleLog = this.testConsoleLog.bind(this)\n        this.changeCurrentVideo = this.changeCurrentVideo.bind(this)\n    }\n  \n    testConsoleLog(message){\n        console.log(\"clicked button!\") \n      }\n\n    changeCurrentVideo(e, player, videoIdxPos){\n        // this.props.player.playlist.currentItem(player.playlist.nextIndex())\n        console.log(\"clicked changed:\" ,videoIdxPos  )\n        player.playlist.currentItem(videoIdxPos)\n        // player.currentItem(2)\n        // console.log(player, player.playlist(), video)\n    }\n  render() {\n      var video = this.props.videoInfo\n      var player = this.props.player\n      console.log(\"Video playlist player:\", player)\n    return (\n        <div className=\"videoInfoContainerInner\" onClick={(e, player , video )=>this.changeCurrentVideo(e, this.props.player, this.props.videoIdxPos)} >\n            <img  className=\"thumbnail\" src= {video.thumbnail[0].srcset}></img>\n            <div className=\"titleContainer\">\n                <div hidden={this.props.currentlyPlayingId !==  this.props.videoIdxPos} className=\"now-playing\">\n                    Now Playing\n                </div>\n                <div className=\"videoTitle\">\n                    {video.name !== null ? video.name : \"Untitled Video\"}\n                </div>\n            </div>\n            \n            \n        </div>\t\n    )\n  }\n}","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport DraggablePlayListVideo from \"./DraggablePlaylistVideo\";\nimport \"../Styles/draggable-playlist-style.css\"\n\n\n// // fake data generator\n// const getItems = (count) =>\n//   Array.from({ length: count }, (v, k) => k).map((k) => ({\n//     id: `item-${k}`,\n//     // content: `item- ${k}`\n//     content: { text: `item- ${k}`, text2: \"....hello\" }\n//   }));\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  console.log(endIndex)\n\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\nconst getItemClass= (isDragging, draggableStyle) => {\n  // some basic styles to make the items look a bit nicer\n  return (isDragging ? \"video-dragging-state\" : \"video-not-dragging-state\")\n};\n\n\n\n// const getItemStyle = (isDragging, draggableStyle) => ({\n//   // some basic styles to make the items look a bit nicer\n//   userSelect: \"none\",\n//   // padding: grid * 2,\n//   // margin: `0 0 ${grid}px 0`,\n//   padding: (grid * 2) ,\n//   margin: `1rem 0`,\n//   whiteSpace: \"wrap\",\n//   flexWrap: \"wrap\",\n//   wordWrap: \"break-word\",\n\n//   // change background colour if dragging\n//   background: isDragging ? \"lightgreen\" : \"grey\",\n\n//   // styles we need to apply on draggables\n//   ...draggableStyle\n// });\n\n// const getListStyle = (isDraggingOver) => ({\n//   background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n//   padding: grid,\n//   // width: 250\n//   // width: '100%',\n//   // maxHeight: '10vw',\n//   maxHeight: '20vw',\n//   overflowX: 'hidden',\n//   overflowY: 'scroll'\n// });\n\n\nconst getListStyle = (isDraggingOver) => {\n  console.log (\"isDraggingOver: \" , isDraggingOver, isDraggingOver ? \"dragging\" : \"not-dragging\" )\n  return (isDraggingOver ? \"dragging-state\" : \"not-dragging-state\")\n};\n\n\n\n\nexport default class DraggablePlayList extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= { \n            loaderStyle: 'block',\n            contentStyle: 'none',\n            playerRef : null,\n            currentPlaylist : this.props.playlist,\n            // items: this.props.playlist != undefined ? this.getItems(this.props.playlist) : []\n            // items: this.getItems() \n            items: null\n            // items: this.getItems(5, this.state.currentPlaylist !=  null ? this.state.currentPlaylist : this.props.playlist ) \n\n        }\n        this.onDragEnd = this.onDragEnd.bind(this);\n        this.getItems = this.getItems.bind(this);\n        this.changeListEntries = this.changeListEntries.bind(this);\n        this.addListEntry = this.addListEntry.bind(this);\n        this.removeListEntry = this.removeListEntry.bind(this);\n\n        this.testConsoleLog = this.testConsoleLog.bind(this)\n\n    }\n    componentDidUpdate(prevProps) {\n      // if(prevProps.playlist  !== this.props.playlist ) {\n      //   this.setState({currentPlaylist : this.props.playlist }, ()=> {\n            this.props.player.playlist(this.props.playlist, this.props.player.playlist.currentItem()); //this second parameter must be set or the playlist will jump to start once updated (default for the second parameter [index of first video to play] is 0 )\n            this.props.player.currentTime(this.props.currentTime)\n            console.log(\"draggable is updating!4\" , this.props.player.currentTime() , this.props.currentTime ,this.state.items, this.props.playlist, this.getItems(3, this.props.playlist))\n            if ( this.state.items == undefined){\n              // this.changeListEntries(this.state.items,  this.props.playlist)\n              console.log(\"draggable is updating!5\")\n              this.setState(\n                {items: this.getItems(3, this.props.playlist)}, \n                ()=>{console.log(\"draggable is updating!5\", this.state.items)}\n                )\n\n            }\n              // this.setState({\n        \n              //   currentPlaylist : this.props.playlist,\n              //   items: this.getItems(5, this.props.playlist ) \n              // })\n            \n            if ( this.state.currentPlaylist.length != this.props.playlist.length){\n              this.changeListEntries(this.state.items,  this.props.playlist)\n              this.setState({loaderStyle: 'none', contentStyle: 'block'})\n              // this.setState({\n        \n              //   currentPlaylist : this.props.playlist,\n              //   items: this.getItems(5, this.props.playlist ) \n              // })\n            }\n            \n            // if ( this.state.currentPlaylist != this.getItems(5, this.props.playlist) ){\n            //   this.changeListEntries(this.state.items,  this.props.playlist)\n            //   // this.setState({\n        \n            //   //   currentPlaylist : this.props.playlist,\n            //   //   items: this.getItems(5, this.props.playlist ) \n            //   // })\n            // }\n      //   });\n      // }\n    }\n  componentDidMount(){\n      console.log(\"hit!!\")\n      console.log(\"The Current Playlist:\", this.props.playlist)\n\n      console.log(\"player: \", this.props.player, this.props.test)\n      if (this.props.player !== undefined && this.props.player != null){\n\n          // this.props.player.playlist([]);\n          this.props.player.playlist(this.props.playlist);\n\n          console.log(\"the playlist2: \" ,this.props.player.playlist())\n            // Play through the playlist automatically.\n            this.props.player.playlist.autoadvance(0);\n            // this.props.player.playlistUi();\n            \n            if (this.state.items == undefined){\n\n              console.log(\"state is undefined:\", this.state.items,  this.props.playlist)\n              this.setState({loaderStyle: 'none', contentStyle: 'block'})\n            }\n            // if (this.state.items == undefined){\n\n            //   console.log(\"state is undefined:\", this.state.items,  this.props.playlist)\n            //   this.setState({\n        \n            //     currentPlaylist : this.props.playlist,\n            //     items: this.getItems(5, this.props.playlist ) \n            //   })\n            // }\n      }\n      \n  }\n    onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) {\n          return;\n        }\n    \n        const items = reorder(\n          this.state.items,\n          result.source.index,\n          result.destination.index\n        );\n    \n        this.setState({\n          items\n        });\n    }\n\n\n    getItems = (count= 0, playlist) =>{\n      if (playlist != undefined){\n        return playlist.map(( video , k)=>{\n          console.log(video)\n          return {\n            id: `item-${k}`,\n            content: { videoInfo:video, text: `item- ${k}`, text2: \"....hello\"\n            }\n          }\n        })\n      }\n      // else{\n      //   return [{\n      //     id: `item-0`,\n      //     content: { videoInfo:video, text: `item- 0`, text2: \"....hello\"\n      //     }\n      //   }]\n      // }\n      \n  }\n  //\n    // getItems = (playlist) =>{\n    //     var formattedPlaylist = playlist.map(( video , k)=>{\n    //     console.log(video)\n    //     return {\n    //       id: `item-${k}`,\n    //       content: { value:video, text: `item- ${k}`, text2: \"....hello\"\n    //       }\n    //     }\n    //   })\n    // }\n\n    //   getItems = (count = 3) =>\n    //   Array.from({ length: count }, (v, k) => k).map((k) => ({\n    //   id: `item-${k}`,\n    //   // content: `item- ${k}`\n    //   content: { text: `item- ${k}`, text2: \"....hello\" }\n    // }));\n\n\n\n    //   getItems = (count = 3, playlist) =>\n    // {\n    //   console.log(\"get playlist rms:\", playlist)\n    //   return Array.from({ length: count }, (v, k) => k).map((k) => ({\n    //   id: `item-${k}`,\n    //   // content: `item- ${k}`\n    //   content: { text: `item- ${k}`, text2: \"....hello\" }\n    // }))\n// }\n\n    \n    \n\n\n\n    //   Array.from({ length: count }, (v, k) => k).map((k) => ({\n    //   id: `item-${k}`,\n    //   // content: `item- ${k}`\n    //   content: { \n    //             // videoData: \n    //             text: `item- ${k}`, text2: \"....hello\", \n    //   }\n    // }\n    // ));\n \n    changeListEntries = (sPlaylist, pPlaylist) =>{\n        \n\n        var newPlaylist  = []\n        if (sPlaylist == undefined){\n            newPlaylist = newPlaylist\n        }\n        else if (pPlaylist.length > sPlaylist.length){\n            newPlaylist = this.addListEntry(sPlaylist, pPlaylist)\n            console.log(\"newPlaylist: \" , newPlaylist, [...sPlaylist], [...sPlaylist][0], [...sPlaylist].push({ text: `item- ${sPlaylist.length}`, text2: \"....hello\"}))\n        }\n        else{\n            newPlaylist = this.removeListEntry(sPlaylist, pPlaylist)\n        }\n        // newPlaylist = pPlaylist\n        this.setState({\n\n          currentPlaylist : this.props.playlist,\n          items: this.getItems(5, newPlaylist ) \n        })\n  }\n  addListEntry = (sPlaylist, pPlaylist) =>{\n      var newPlaylist =  sPlaylist.map((video , idx)=>{return video.content.videoInfo})\n      newPlaylist.push(pPlaylist[pPlaylist.length-1])\n      // var newPlaylist =  [...sPlaylist]\n      // newPlaylist.push({\n      // id: `item-${sPlaylist.length}`,\n      // content: { videoInfo:pPlaylist[pPlaylist.length-1], text: `item- ${sPlaylist.length}`, text2: \"....hello\"\n      // }})\n      return newPlaylist\n      // pPlaylist[pPlaylist.length-1])\n  }\nremoveListEntry = (sPlaylist, pPlaylist) =>{\n  var videoIndexObj = {}\n  pPlaylist.forEach(video => {\n    videoIndexObj[video.videoId] = true\n  });\n  console.log(\"videoIndexObj: \", videoIndexObj)\n  // sPlaylist.forEach(video => {\n  //   videoIndexObj[video.videoId] = true\n  // });\n  var idx = 0;\n  var found = false;\n  while (idx < sPlaylist.length && !found){\n    if (pPlaylist[sPlaylist[idx].content.videoInfo.videoId] === true ){\n      found = true\n      var newPlaylist =  sPlaylist.map((video , idx)=>{return video.content.videoInfo})\n      // return [...sPlaylist].split(idx, 0)\n      console.log(\"newPlaylistRemove \", newPlaylist, newPlaylist[0] )\n      return newPlaylist.split(idx, 1)\n    }\n    idx+=1\n  }\n  return\n  // var pVideoIds = pPlaylist.map((video, idx)=>{ return video.videoId })\n  // Object.fromEntries(\n  //   Object.entries(obj).map(\n  //     ([k, v], i) => [k, v => 2 * v  ]\n  //   )\n  // )\n  // console.log(pVideoIds )\n  // return pPlaylist\n}\n\n  \ntestConsoleLog(message){\n  console.log(\"clicked button!\") \n}\n   \n   \n      // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    // if (this.state.items != undefined && this.state.currentPlaylist != this.getItems(5, this.props.playlist) ){\n    //   this.changeListEntries(this.state.items,  this.props.playlist)\n    //   // this.setState({\n\n    //   //   currentPlaylist : this.props.playlist,\n    //   //   items: this.getItems(5, this.props.playlist ) \n    //   // })\n    // }\n    // else if (this.state.items != undefined){\n\n    //   console.log(\"state is undefined:\", this.state.items,  this.props.playlist)\n    //   this.setState({\n\n    //     currentPlaylist : this.props.playlist,\n    //     items: this.getItems(5, this.props.playlist ) \n    //   })\n    // }\n    console.log(\"state is not undefined:\", this.state.items,  this.props.playlist, this.getItems(5, this.props.playlist))\n\n    \n    return (\n      <div>\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(provided, snapshot) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              className={`playlistContainer ${getListStyle(snapshot.isDraggingOver)}`}\n            >\n              {this.state.items !=null && this.state.items.map((item, index) => (\n                <Draggable key={item.id} draggableId={item.id} index={index} \n                >\n                  {(provided, snapshot) => (\n                    <div  \n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      style={getItemStyle(\n                        snapshot.isDragging,\n                        provided.draggableProps.style\n                      )}\n                      className={`videoContainer ${getItemClass(snapshot.isDragging)}`}\n                      onClick={console.log(\"clicked!\")}\n                    >\n                      <div className=\"handle\" {...provided.dragHandleProps} > = </div>\n                      {/* <button onClick={this.testConsoleLog}> Hello </button> \n                      <button  onMouseDown={e => e.stopPropagation()} onClick={this.testConsoleLog} onFocus={console.log(\"clicked!\") }>Hello2</button> */}\n                      {/* <input onClick={console.log(\"clicked input!\") } onChange={console.log(\"clicked!\") } ></input> */}\n                      <DraggablePlayListVideo  className=\"videoInfoContainerOuter\" videoInfo = {item.content.videoInfo} onMouseDown={e => e.stopPropagation()} onClick={this.testConsoleLog}  player= {this.props.player}  currentlyPlayingId = {this.props.currentlyPlayingId} videoIdxPos ={index}></DraggablePlayListVideo>\n                      {/* <DraggablePlayListVideo contenteditable videoInfo = {item.content.videoInfo} onMouseDown={e => e.stopPropagation()} onClick={this.testConsoleLog}  ></DraggablePlayListVideo> */}\n                      {/* <div className=\"delete\" onClick={(e, delFunc, videoId)=>this.handleDelete(e, this.props.deleteVideo, item.content.videoInfo.videoId )}> X </div> */}\n                      <div className=\"delete\" onClick={(e, videoId)=>this.props.deleteVideo(e, item.content.videoInfo.videoId )}> X </div>\n                    </div>\n                  )}\n                  {/* <div > Hello </div> */}\n                  {/* </div> */}\n                  \n                </Draggable>\n              ))}\n              {provided.placeholder}\n              {/* <button onClick={console.log(\"clicked button!\") }> Hello </button>  */}\n            </div>\n          )}\n        </Droppable>\n       \n      </DragDropContext>\n       {/* <button onClick={console.log(\"clicked button!\") }> Hello </button>  */}\n      </div>\n    );\n  }\n}\n\n\n\n\n","import React from 'react';\nimport videojs from 'video.js';\nimport YoutubeVid from 'videojs-youtube';\nimport playlistJS from 'videojs-playlist';\nimport playlistUI from 'videojs-playlist-ui';\nimport '../Styles/draggable-playlist-container-styles.css';\n\n\n\n// Code for the addition of custom buttons to the video control bar are adaped from Gino's CodePen: 'Videojs - Playlist 5.16.0'\n// It can be found here: https://codepen.io/onigetoc/pen/wJRyvZ   \n// I changed it to be more modular and executable from a method.      \n// I found it under this issue on GitHub: https://github.com/videojs/video.js/issues/3473#issuecomment-291667994\n\n\n\n\n\n\n// import '../../node_modules/videojs-playlist-ui/dist/videojs-playlist-ui.vertical.css';\nimport DraggablePlayList from '../Components/DraggablePlaylist';\n\n\n//  const getTime = ()=>{\n//     console.log(this.player , this.videoNode , this.player.currentTime())\n//   }\nexport default class DraggablePlaylistContainer extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= { \n            open: true\n        }\n        this.togglePlaylistVisibility = this.togglePlaylistVisibility.bind(this)\n\n        // this.testFunc = this.testFunc.bind(this);\n    }\n    togglePlaylistVisibility(){\n        this.setState({open: !this.state.open})\n    }\n\n  // wrap the player in a div with a `data-vjs-player` attribute\n  // so videojs won't create additional wrapper in the DOM\n  // see https://github.com/videojs/video.js/pull/3856\n  render() {\n    // this.props.setVidRef(this.player)\n    // console.log(\"player ref:\", this.player)\n\n    console.log(\"player3: \", this.player)\n    \n    return (\n    //   <div className={`playlistContainerMaster ${!this.state.open ? ' closed ' : ' open '}`}>\t\n      <div className={`playlistContainerMaster ${!this.state.open ? ' open ':' closed '}`}>\t\n        <div className=\"playlistBar\" onClick={this.togglePlaylistVisibility} > Playlist </div>\n        \n        {/* <div hidden={!this.state.open} className=\"playlistBarBlock\" > </div> */}\n\n        {/* <div  className=\"playlistBarBlock\" > </div> */}\n\n        {/* <DraggablePlayList /> */}\n        <DraggablePlayList player={this.props.player} playlist={this.props.playlist} test= {this.props.test} currentlyPlayingId = {this.props.currentlyPlayingId} deleteVideo={this.props.deleteVideo} currentTime={this.props.currentTime}/>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport '../Styles/page-container-styles.css'\n// import VideoPlayer from \"../Components/VideoPlayer.js\";\n// import YoutubeVid from 'videojs-youtube';\n\n// Scrolling view functionality is inspired and based off of CodePen:\n// Name: 'React: scrollIntoView'\n// Pen Owner: 'Hirokazu Takatama'\n\n\nexport default class NoteTaker extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state= {\n            editing: false,\n            currentNoteTime: null,\n            createdTime: null,\n            // text_disabled: true,\n            // noteTitle_disabled: true,\n            text: '',\n            noteTitle: '',\n            bookmarked:false,\n            // noteSectionVideoId : this.props.videoId,\n            lastEnabled:  { state : null, saved: true } ,\n            videoCategory : this.props.videoCategory,\n            videoId: this.props.videoId,\n            saved: false\n            // bookmarked : this.props.note.bookmarked\n        }\n        this.handleSave = this.handleSave.bind(this);\n        this.acceptSpecialSymbol = this.acceptSpecialSymbol.bind(this);\n        this.updateTimeStamp = this.updateTimeStamp.bind(this);\n        this.formatTimeStamp = this.formatTimeStamp.bind(this);\n    }\n    componentDidUpdate(nextProps){\n        //if the section rendered is different from the last (we changed videos or we're loading a different set of notes) then update all disabled states to close them all\n        if (this.state.saved || (this.state.text === '' && this.state.noteTitle === '' && this.state.currentNoteTime!== null)){ //if we've just saved or we just cleared out both input fields\n            this.setState({\n                saved: false,\n                text: '',\n                noteTitle: '',\n                bookmarked:false,\n                currentNoteTime: null\n\n            })\n        }\n        if (nextProps.videoId !== this.props.videoId){\n            console.log(\"updating videoId...\", nextProps.videoId ,this.props.videoId)\n            this.setState({\n                            videoId : this.props.videoId\n                          })\n            \n        }\n        else{\n            console.log(\"not updating...\", )\n        }\n    }\n    // componentDidMount(){\n    // }\n    handleShow(i) {\n        console.log(this.refs, i)\n        console.log(this.refs[toString(i)])\n        // this.setState({index: i});\n        \n        // this.refs[i].scrollIntoView({block: 'end', behavior: 'smooth'});\n        // console.log(this.refs[i].)\n        // this.refs[i].attributes.push(\"centerListItem\")\n        this.refs[i].scrollIntoView({block: 'center', behavior: 'smooth'});\n\n        this.setState({index: i})\n      }\n\n\n    handleSave( e, overrideObj = null  ,  toggleEditingFeild = true ){\n        //note, lastEnabledData is a object with properties 'state' and 'saved' in the same fashion as the \n\n        //         addNote(e , newStartTime, newNoteTitle = null, newText, newBookmarked=false , newDrawn, newImages){\n        \n        // this.props.addNote( e, this.state.videoId, this.state.currentNoteTime, this.state.noteTitle, this.state.text, this.state.bookmarked, \n        //     {   noteTitle: '',\n        //         title: '',\n        //         currentNoteTime: null,\n        //         // lastSave: \n\n\n        //         bookmarked: false})\n        \n        // var lastEnabled = this.state.lastEnabled\n        this.setState({\n            saved: true\n        }\n        , ()=>{this.props.addNote( e, this.state.videoId, this.state.currentNoteTime, this.state.noteTitle, this.state.text, this.state.bookmarked)}\n        )\n        \n        // this.setState({\n        //     noteTitle: '',\n        //     title: '',\n        //     currentNoteTime: null,\n        //     lastSave: \n\n\n        //     bookmarked: false\n        // }\n        // // , ()=>{this.props.addNote( e, this.state.videoId, this.state.currentNoteTime, this.state.noteTitle, this.state.text, this.state.bookmarked)}\n        // )\n\n        // // this.props.changeNote(\"changing note\")\n        // console.log(\"saving....\", lastEnabled, lastEnabled.state ,this.state[lastEnabled.state] , this.state.text)\n        // var noteEditProperty =  this.convertDisableStatusToValue(lastEnabled.state)\n    \n        // var setStateOpts = {}\n        // if (toggleEditingFeild){\n        //     setStateOpts = {\n        //         [lastEnabled.state]: !this.state[lastEnabled.state], \n        //         lastEnabled : {\n        //                             state: this.state.lastEnabled.state, \n        //                             saved: true\n        //                         } \n        //     }\n        // }\n        \n\n        // // this.handleToggleState(e, lastEnabled.state)\n        // this.setState( setStateOpts ,  ()=>{\n        //     console.log(`text_disabled: `, this.state[noteEditProperty], noteEditProperty , overrideObj )\n        //     this.props.changeNote(  /* noteInfo     */  this.props.note, \n        //                             /* newdata      */  overrideObj !== null && overrideObj !== undefined ? overrideObj.data : this.state[noteEditProperty] , \n        //                             /* noteIdx      */  this.props._ref , \n        //                             /* dataToUpdate */  overrideObj !== null && overrideObj !== undefined ? overrideObj.value : noteEditProperty  , \n        //                             /* videoId      */  this.props.videoId)\n\n\n        // } )\n    }\n    handleInputChange(e, stateVal){\n        // var eVal = e.target.value\n        // in order to see the most current change in printing, you must include the print statment in the setState function and there must be in an anonymnous arrow function    >>> https://forum.freecodecamp.org/t/solved-this-setstate-is-updating-state-after-console-log/206985/2\n        // if we use [] around the property name, we can use ES6 computed property names >>> https://stackoverflow.com/questions/29280445/reactjs-setstate-with-a-dynamic-key-name\n        var newState = {[stateVal]: e.target.value}\n        if (this.state.currentNoteTime === null){\n            newState.currentNoteTime = this.props.getCurrVidTime()\n        }\n        this.setState(newState,  ()=>{console.log(`new ${stateVal} value: `, this.state[stateVal])} )\n\n    }\n    handleBookmark( e , overrideObj = null){\n        // console.log(\"bookmark: \" , this.props.note.bookmarked)\n        this.setState({bookmarked: !this.state.bookmarked})\n\n        // this.handleSave( e, {value: \"bookmarked\" , data: !this.props.note.bookmarked }, false ) \n        \n            // this.props.changeNote(  /* noteInfo     */  this.props.note, \n            //                         /* newdata      */  overrideObj !== null && overrideObj !== undefined ? overrideObj.data : this.state[noteEditProperty] , \n            //                         /* noteIdx      */  this.props._ref , \n            //                         /* dataToUpdate */  overrideObj !== null && overrideObj !== undefined ? overrideObj.value : noteEditProperty  , \n            //                         /* videoId      */  this.props.videoId)\n\n\n    }\n    acceptSpecialSymbol(e, commands, stateVal){\n\n        if (e.keyCode === 9 && commands[\"include_tabs\"] ){\n            e.preventDefault(); //prevent tab from focusing the next dom object\n\n        // this.setState({[stateVal]: e.target.value},  ()=>{console.log(`new ${stateVal} value: `, this.state[stateVal])} )\n            this.setState({[stateVal]: this.state[stateVal]+ String.fromCharCode(9)},  ()=>{console.log(`new ${stateVal} value: `, this.state[stateVal])} )\n        }\n        if (e.keyCode === 13 && e.shiftKey && commands[\"SE_submit\"] ){ // reference for 'e.shiftKey: http://jsfiddle.net/McH8q/28/#save\n            // this.handleSave(e, this.state.lastEnabled );\n            this.handleSave(e);\n        }\n        if (e.keyCode === 13 && commands[\"E_submit\"] ){\n            // this.handleSave(e, this.state.lastEnabled );\n            this.handleSave(e);\n\n        }\n\n    }\n\n    updateTimeStamp(e, getCurrVidTime){\n        this.setState({ currentNoteTime : getCurrVidTime() })\n        // this.handleSave( e, {value: \"startTime\" , data: getCurrVidTime() }, false ) \n    }\n\n    formatTimeStamp(totalSecs, noteInfo){\n        var hr = 0\n        var min = 0 \n        var sec = 0\n        if (totalSecs < 60){ //if it's under a minute\n            sec = Math.trunc(totalSecs)\n            return <div className={this.props.videoCategory === \"web\"  ?  \"timestamp\": \"\"}>0:{sec < 10 ? '0' : ''}{sec}</div>\n        }\n        else if (totalSecs < 60*60){ //if it's under an hour\n            min = Math.trunc(totalSecs/60)\n            sec = Math.trunc(totalSecs - (min*60))\n            return <div>{min}:{sec < 10 ? '0' : ''}{sec}</div>\n        }\n        else if (totalSecs < 60*60*24){//if it's under a day\n            hr =  Math.trunc(totalSecs/60/60)\n            min = Math.trunc((totalSecs - (hr*60*60))/60)\n            sec = Math.trunc(totalSecs - (hr*60*60) - (min*60))\n            return <div>{hr}:{min < 10 ? '0' : ''}{min}:{sec < 10 ? '0' : ''}{sec}</div>\n        }\n        else{//if it's been a day and no video should be that long\n            return <div>Error: MAX_VIDEO_LENGTH EXCEEDED</div>\n        }\n    }\n    //TODO: different update time formats depending on how long it's been\n    formatUpdate(sec){\n        if (sec < 60){ //if it's under a minute\n\n        }\n        else if (sec < 60*60){ //if it's under an hour\n\n        }\n        else if (sec < 60*60*24){//if it's under a day\n\n        }\n        else{//if it's been a day\n\n        }\n        return\n    }\n    \n    render() {\n\n        if (this.props.videoCategory !== this.state.videoCategory){\n            this.setState({\n                videoCategory : this.props.videoCategory\n            })\n        }\n\n        var noteInfo = this.props.note\n        var formattedTS = this.formatTimeStamp(this.state.currentNoteTime, noteInfo)   \n\n        // const date = new Date('2010-08-05')\n        const date = Date.now()\n        const dateTimeFormat = new Intl.DateTimeFormat('en', { year: 'numeric', month: 'short', day: '2-digit' , hour: 'numeric', minute: 'numeric', second: 'numeric',  } ) \n        const [{ value: month },,{ value: day },,{ value: year },,{value : hour},, { value : minute},, {value : second}] = dateTimeFormat.formatToParts(date ) \n\n        console.log(`${day}-${month}-${year }`)\n        console.log(`${day}👠${month}👢${year}`) // just for fun\n       \n        return(\n                    <div className={'ListItem '+ this.props.additionalClasses} >\n                        <div onClick={() => this.props.setCurrVidTime(this.state.currentNoteTime) } className=\"noteTitleContainer\" title={this.state.noteTitle}>\n                            <div  className=  \"seekText titleDiv\"   >Go to:</div>\n\n                            <div className= \"titleDiv\" >{formattedTS}</div>\n                            <div className=\"  titleDiv\" >&nbsp;|&nbsp;</div>\n                            <input  onChange={( e, state ) => this.handleInputChange( e, 'noteTitle')} \n                                    onKeyDown={ (e, state) => this.acceptSpecialSymbol(e, { \"E_submit\" : true } , null)} \n                                    value={this.state.noteTitle}  \n                                    className= \"noteTitleEditor titleDiv\"   placeholder={this.state.text} >\n                            </input>\n        \n                            <br/>\n                        </div>\n                        {/* the className must be conditional because display flex undos this hidden attribute */}\n                        <div    className= \"noteMsgEditorContainer\"  >\n                                    <textarea   onChange={( e, state ) => this.handleInputChange( e, 'text')} \n                                                onKeyDown={ (e, state) => this.acceptSpecialSymbol(e, {'include_tabs' : true , \"SE_submit\" : true }, 'text')} \n                                                value={this.state.text} \n                                                className=\"noteMsgEditor\">\n                                    </textarea>\n                        </div>\n\n\n                        <button onClick={(e, updateTimeFunc )=>this.updateTimeStamp(e , this.props.getCurrVidTime)} >Update Timestamp</button>\n                        <button     onClick={( e, state ) => this.handleBookmark( e, '')}>\n                                        Bookmark Note <div hidden={!this.state.bookmarked}><i className=\"fas fa-bookmark\"></i> </div> <div hidden={this.state.bookmarked}><i className=\"far fa-bookmark\"></i></div>\n                        </button>\n                        <button     onClick={this.handleSave}>\n                                        Save\n                        </button>\n                        {/* <div>Created: {`${month} ${day}, ${year } at ${hour}:${minute}:${second }`}</div> */}\n                        \n                       \n                    </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n\n// fake data generator\nconst getItems = (count) =>\n  Array.from({ length: count }, (v, k) => k).map((k) => ({\n    id: `item-${k}`,\n    // content: `item- ${k}`\n    content: { text: `item- ${k}`, text2: \"....hello\" }\n  }));\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  console.log(endIndex)\n\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  whiteSpace: \"wrap\",\n  flexWrap: \"wrap\",\n  wordWrap: \"break-word\",\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = (isDraggingOver) => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250\n});\n\n\n\nexport default class DraggableList extends React.Component {\n    constructor(props){\n        super(props);\n        this.state= { \n            playerRef : null,\n            currentPlaylist : [],\n            items: getItems(12)\n        }\n        this.onDragEnd = this.onDragEnd.bind(this);\n    }\n    onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) {\n          return;\n        }\n    \n        const items = reorder(\n          this.state.items,\n          result.source.index,\n          result.destination.index\n        );\n    \n        this.setState({\n          items\n        });\n      }\n \n    \n  \n   // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(provided, snapshot) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              style={getListStyle(snapshot.isDraggingOver)}\n            >\n              {this.state.items.map((item, index) => (\n                <Draggable key={item.id} draggableId={item.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={getItemStyle(\n                        snapshot.isDragging,\n                        provided.draggableProps.style\n                      )}\n                    >\n                      {item.content.text}ngvhjg\n                      {item.content.text2}ngvhjg\n                      {item.content.text2}ngvhjg\n                      {item.content.text2}ngvhjg\n                      {item.content.text2}ngvhjg\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\n\n\n\n\n\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       items: getItems(12)\n//     };\n//     this.onDragEnd = this.onDragEnd.bind(this);\n//   }\n\n//   onDragEnd(result) {\n//     // dropped outside the list\n//     if (!result.destination) {\n//       return;\n//     }\n\n//     const items = reorder(\n//       this.state.items,\n//       result.source.index,\n//       result.destination.index\n//     );\n\n//     this.setState({\n//       items\n//     });\n//   }\n\n//   // Normally you would want to split things out into separate components.\n//   // But in this example everything is just done in one place for simplicity\n//   render() {\n//     return (\n//       <DragDropContext onDragEnd={this.onDragEnd}>\n//         <Droppable droppableId=\"droppable\">\n//           {(provided, snapshot) => (\n//             <div\n//               {...provided.droppableProps}\n//               ref={provided.innerRef}\n//               style={getListStyle(snapshot.isDraggingOver)}\n//             >\n//               {this.state.items.map((item, index) => (\n//                 <Draggable key={item.id} draggableId={item.id} index={index}>\n//                   {(provided, snapshot) => (\n//                     <div\n//                       ref={provided.innerRef}\n//                       {...provided.draggableProps}\n//                       {...provided.dragHandleProps}\n//                       style={getItemStyle(\n//                         snapshot.isDragging,\n//                         provided.draggableProps.style\n//                       )}\n//                     >\n//                       {item.content.text}ngvhjg\n//                       {item.content.text2}ngvhjg\n//                       {item.content.text2}ngvhjg\n//                       {item.content.text2}ngvhjg\n//                       {item.content.text2}ngvhjg\n//                     </div>\n//                   )}\n//                 </Draggable>\n//               ))}\n//               {provided.placeholder}\n//             </div>\n//           )}\n//         </Droppable>\n//       </DragDropContext>\n//     );\n//   }\n// }\n\n// // Put the thing into the DOM!\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n","import React from \"react\";\n// import styled from 'styled-components';\n// import { theme } from \"../util/GlobalStyles\";\n// import './App.css';\n\n// import '../Styles/expandingCard.css'\n// import '../Styles/social-media-slider-toggles.css'\n// import '../Styles/navbar.css'\nimport '../Styles/page-container-styles.css'\n\nimport test from '../DownloadFolder/testFile.txt'\n            // import testVideo  from '../Assets/testVid.mp4'\n            // import testVideo1  from './testVid.mp4'\nimport testVideo2  from './testVid.mp4'\n// import testF from '../DownloadFolder/testFolder.zip'\n\nimport JSZip from 'jszip';\nimport FileSaver from 'file-saver';\n\n// import videojs from 'video.js'\nimport VideoPlayer from \"../Components/VideoPlayer.js\";\n\n            // import YoutubeVid from 'videojs-youtube';\nimport NoteContainer from \"./NoteContainer\";\nimport DraggablePlaylistContainer from \"./DraggablePlaylistContainer\";\nimport Playlist from \"../Components/Playlist\";\nimport DraggableList from \"../Components/DraggableList\";\nimport DraggablePlayList from \"../Components/DraggablePlaylist\";\nimport NoteTaker from \"../Components/NoteTaker\";\n// import 'videojs-youtube';\n\n// const https = require('https');\n// const request = require('request');\n\n                // const testGet=()=>{\n                //     // https.get('/repos/:owner/:repo/actions/secrets', (resp) => {\n                //     https.get('/VidNote/:CarolineHoang/:VidNote/actions/secrets', (resp) => {\n                //         let data = '';\n                    \n                //         // A chunk of data has been recieved.\n                //         resp.on('data', (chunk) => {\n                //           data += chunk;\n                //         });\n                    \n                //         // The whole response has been received. Print out the result.\n                //         resp.on('end', () => {\n                //         //   console.log(JSON.parse(data).explanation);\n                //           console.log(data);\n                //         });\n                    \n                //       }).on(\"error\", (err) => {\n                //         console.log(\"Error: \" + err.message);\n                //       });\n                // }\n\n\n// import \"https://vjs.zencdn.net/7.8.4/video.js\";\n\n\nconst testFile = test;\n\n\n                // //react state values:\n                // const currentNoteIndex =0;  // this is the index of the note that is currently the note that the video is on to color as the \"current one\"\n                //                             // to start out, and be easy, we reset this to 0 and start the video from the start every time we change video in the playlist\n                // const videoTime =0; //this value should update every half second and is the time that the user saves as the note time but rounded to the next second\n                //                     //on each update, we check if the time is greater than the timestamp on the above indexed note\n                //                     //if it's more and the index is not the max length of the note list minus 1, then we check the nextones through the list and stop at the next one before the one that is more than this number. If we get to the end, then the last one is the current note.\n                //                     //if the note happens to have an end time  (and we cannot set this time to overlap with the next one's start time) then we make sure that the current time is less than that end time\n                \n                    \nconst Meta = {\n    // fileNames: [],  //this will be an array in the order of the playlist\n    //                 // every Youtube video will have the \n    maxVideoId: 3,\n    maxNoteId:  3,\n    noteData:[\n        {\n            videoId: 0,\n            category: 'web', //  web = youtube, vimero. etc, local = files\n            type: 'video/youtube',\n            url: 'https://www.youtube.com/watch?v=3WQHDUYk310&feature=emb_rel_pause',\n            // videoName: null,\n            videoName: 'Dummy YouTube VideoName 1',\n            ytVidId : '3WQHDUYk310',\n            fileObj : null,\n            currentTime: 0,\n            bookmarkTotal: 0,\n            notes: \n            [   \n                {\n                    noteId: 0,\n                    startTime: 0, //this should not be a Date value but instead a count of miliseconds from the start of the video\n                    endTime: null,\n                    noteTitle: null,\n                    text: \"This is a test message111\",\n                    bookmarked: false,\n                    created : Date.now(),\n                    lastUpdated : Date.now(),\n                    drawn: false,\n                    images: [] //this is an array of image refrences to include in this note, including if the video screen is drawn on// might separate later\n                },\n                {   \n                    noteId: 1,\n                    startTime: 1, //this should not be a Date value but instead a count of miliseconds from the start of the video\n                    endTime: null,\n                    noteTitle: null,\n                    text: \"This is a test message222\",\n                    bookmarked: false,\n                    created : Date.now(),\n                    lastUpdated : Date.now(),\n                    drawn: false,\n                    images: [] //this is an array of image refrences to include in this note, including if the video screen is drawn on// might separate later\n                }\n            ]\n            \n    \n        },\n        {\n            videoId: 1,\n            category: 'web', //  web = youtube, vimero. etc, local = files\n            type: 'video/youtube',\n            url: 'https://www.youtube.com/watch?v=voFRslp8d60&t=17s',\n            videoName: null,\n            ytVidId : 'voFRslp8d60',\n            fileObj : null,\n            currentTime: 0,\n            bookmarkTotal: 0,\n            // videoName: 'Dummy YouTube VideoName 2',\n            notes: \n            [   \n                {\n                    noteId: 0,\n                    startTime: 0, //this should not be a Date value but instead a count of miliseconds from the start of the video\n                    endTime: null,\n                    noteTitle: null,\n                    text: \"This is a test message333\",\n                    bookmarked: false,\n                    created : Date.now(),\n                    lastUpdated : Date.now(),\n                    drawn: false,\n                    images: [] //this is an array of image refrences to include in this note, including if the video screen is drawn on// might separate later\n                },\n                {   \n                    noteId: 1,\n                    startTime: 0, //this should not be a Date value but instead a count of miliseconds from the start of the video\n                    endTime: null,\n                    noteTitle: null,\n                    text: \"This is a test message444\",\n                    bookmarked: false,\n                    created : Date.now(),\n                    lastUpdated : Date.now(),\n                    drawn: false,\n                    images: [] //this is an array of image refrences to include in this note, including if the video screen is drawn on// might separate later\n                }\n            ]\n            \n    \n        },\n        {\n            videoId: 2,\n            category: 'local', //  web = youtube, vimero. etc, local = files\n            type: 'video/mp4',\n            url: testVideo2,\n            videoName: \"testVid.mp4\",\n            ytVidId : null,\n            fileObj : null,\n            currentTime: 0,\n            bookmarkTotal: 0,\n            notes: \n            [   \n                {\n                    noteId: 2,\n                    startTime: 0, //this should not be a Date value but instead a count of miliseconds from the start of the video\n                    endTime: null,\n                    noteTitle: null,\n                    text: \"This is a test message444\",\n                    bookmarked: false,\n                    created : Date.now(),\n                    lastUpdated : Date.now(),\n                    drawn: false,\n                    images: [] //this is an array of image refrences to include in this note, including if the video screen is drawn on// might separate later\n                },\n                {   \n                    noteId: 3,\n                    startTime: 0, //this should not be a Date value but instead a count of miliseconds from the start of the video\n                    endTime: null,\n                    noteTitle: null,\n                    text: \"This is a test message555\",\n                    bookmarked: false,\n                    created : Date.now(),\n                    lastUpdated : Date.now(),\n                    drawn: false,\n                    images: [] //this is an array of image refrences to include in this note, including if the video screen is drawn on// might separate later\n                }\n            ]\n    \n        }\n\n    ],\n    settings : {\n        warnings: false,\n        reverse_shift_enter_submit: false,\n        show_undo: false\n    }\n    \n}\n\nconst ACCEPTED_FILE_EXTENSIONS = {\n        \"txt\" : { type: 'text', valid : true },\n\n        \"jpg\" : { type: 'image', valid : true },\n\n        \"mp4\" :  { type: 'video', valid : true }\n\n}\n\n\nlet zip = new JSZip();\nvar Img = zip.folder(\"Images\");\nvar Videos = zip.folder(\"Videos\");\nvar Originals = Videos.folder(\"Originals\");\nvar Drawn = Videos.folder(\"Drawn\");\nvar Data= zip.folder(\"Data\");\nvar MetaFiles= zip.folder(\"Meta\");\n\nMetaFiles.file(\"meta.txt\", JSON.stringify(Meta)  );\n// var Meta = zip.folder(\"meta\");\n// var img = zip.folder(\"images\");\n// zip.file(\"idlist.txt\", `PMID:29651880\\r\\nPMID:29303721`);\n// zip.file(\"idlist2.txt\", `PMID:29651880\\r\\nPMID:29303721`);\n// img.file(\"idlist2.txt\", `PMID:29651880\\r\\nPMID:29303721`);\n\nconst downloadNotes = () =>{\n    zip.generateAsync({type: \"blob\"}).then(function(content) {\n        const filename = 'VidNotes '+Date.now()+'.zip'\n        FileSaver.saveAs(content, filename);\n    }); \n}\n\n\n\n\n\n\nconst getFileExtenstion = (fileName) => {\n    return fileName.substr(fileName.lastIndexOf('.') + 1); \n    // var ext = e.target.value.substr(e.target.value.lastIndexOf('.') + 1);\n}\n\nexport default class PageContainer extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state= {\n            videoRef : null,\n            videoInfo: {},\n            newNote: '',\n            newVideoLink: '',\n            meta: Meta,\n            backupMeta : null,\n            info: 'asdf',\n            uploadedVideos: [],\n            currPlayingVid : {},\n            currPlayingVidId : 0,\n            lastPlayingVidId : 0,\n            fileContents: 'blah blah',\n            lastStartTime: 0\n            // current\n        }\n        this.setVideoRef = this.setVideoRef.bind(this);\n        this.getVideoRef = this.getVideoRef.bind(this);\n        this.getCurrVidTime = this.getCurrVidTime.bind(this);\n        this.setCurrVidTime = this.setCurrVidTime.bind(this);\n\n        this.addNote = this.addNote.bind(this);\n        this.changeNote = this.changeNote.bind(this);\n        this.deleteNote = this.deleteNote.bind(this);\n        this.uploadFile = this.uploadFile.bind(this);\n        this.addToPlaylist = this.addToPlaylist.bind(this);\n        this.deleteVideo = this.deleteVideo.bind(this);\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.acceptSpecialSymbol = this.acceptSpecialSymbol.bind(this);\n        this.findMostRecentNoteIdx =this.findMostRecentNoteIdx.bind(this)\n        this.findNewNoteIdx = this.findNewNoteIdx.bind(this)\n        this.recursiveBinarySearch = this.recursiveBinarySearch.bind(this)\n        this.YouTubeGetID = this.YouTubeGetID.bind(this);\n        this.loadProject = this.loadProject.bind(this);\n        this.downloadProject = this.downloadProject.bind(this);\n        this.loadBackupProject = this.loadBackupProject.bind(this);\n\n\n        this.testConsoleLog = this.testConsoleLog.bind(this)\n        this.printPlayer = this.printPlayer.bind(this)\n\n    }\n    setVideoRef(ref){\n        // console.log(\"setting the ref\")\n        // ref.on('playlistchange', function() {\n        //     // ref.playlist();\n        //     console.log(\"The playlist has changed!\")\n        // debugger\n\n          \n        // });\n        ref.on('beforeplaylistitem', ()=> {\n            // ref.playlist();\n            // console.log(\"Video switching:\")\n            // console.log(\"Playing next video!111\", ref.playlist()[ref.playlist.currentIndex()])\n            \n            var currIndex = ref.playlist.currentIndex()\n            var metaCopy = this.state.meta\n            // console.log(\"Video switching:\", this.state.videoRef, metaCopy.noteData[lastIndex].currentTime, this.state.meta.noteData[currIndex].currentTime) \n            console.log(\"Video before switching:\", currIndex,this.state.videoRef.currentTime() ) \n                        // if (this.state.videoRef != undefined && this.state.videoRef != null){\n                        //     console.log('ref is defined',this.state.videoRef, 'end')\n                        //     var lastIndex = this.state.lastPlayingVidId\n                        //     var currTime = this.state.videoRef.currentTime()\n                        //     // console.log(\"Video Switch values:\" , lastIndex , currIndex, metaCopy.noteData[lastIndex].currentTime, this.state.meta.noteData[currIndex].currentTime)\n                        //     console.log(\"Video Switch values:\" , lastIndex , currIndex, metaCopy.noteData[lastIndex].currentTime, this.state.meta.noteData[currIndex].currentTime)\n\n                        //     // this.state.videoRef.playlist.currentTime(this.state.meta.noteData[currIndex].currentTime)\n                        //     this.setCurrVidTime(this.state.meta.noteData[currIndex].currentTime)\n                        //     // metaCopy.noteData[currIndex].currentTime = currTime\n                        //     metaCopy.noteData[lastIndex].currentTime = currTime\n                        //     console.log(\"Video Switch values2:\" ,currTime , lastIndex , currIndex, metaCopy.noteData[lastIndex].currentTime, metaCopy.noteData[currIndex].currentTime)\n\n                        // }\n                    \n                        this.setState({\n                            lastStartTime: this.state.videoRef.currentTime()\n                            // currPlayingVid : ref.playlist()[ref.playlist.currentIndex()],\n                            // currPlayingVid : ref.playlist()[currIndex],\n                            // lastPlayingVidId : this.state.currPlayingVidId,\n                            // currPlayingVidId : currIndex,\n                            // meta: metaCopy\n                        },\n                        ()=> {console.log(\"hiiii222\", this.state.currPlayingVid, this.state.lastStartTime)}\n                        )\n          \n        });\n        ref.on('playlistitem', ()=> {\n            // ref.playlist();\n            // console.log(\"Video switching:\")\n            // console.log(\"Playing next video!111\", ref.playlist()[ref.playlist.currentIndex()])\n            \n            var currIndex = ref.playlist.currentIndex()\n            var metaCopy = this.state.meta\n            // console.log(\"Video switching:\", this.state.videoRef, metaCopy.noteData[lastIndex].currentTime, this.state.meta.noteData[currIndex].currentTime) \n            console.log(\"Video switching:\", this.state.videoRef, this.state.videoRef == null ? \"null\" : this.state.videoRef, \"      last start time:\" ,this.state.lastStartTime) \n                        if (this.state.videoRef != undefined && this.state.videoRef != null){\n                            console.log('ref is defined',this.state.videoRef, 'end')\n                            var lastIndex = this.state.lastPlayingVidId\n                            // var currTime = this.state.videoRef.currentTime()\n                            // var currTime = this.state.lastStartTime\n                            var lastTime = this.state.lastStartTime\n                            // console.log(\"Video Switch values:\" , lastIndex , currIndex, metaCopy.noteData[lastIndex].currentTime, this.state.meta.noteData[currIndex].currentTime)\n                            console.log(\"Video Switch values:\" , lastIndex , currIndex, metaCopy.noteData[lastIndex].currentTime, this.state.meta.noteData[currIndex].currentTime)\n\n                            // this.state.videoRef.playlist.currentTime(this.state.meta.noteData[currIndex].currentTime)\n                            // this.setCurrVidTime(this.state.meta.noteData[currIndex].currentTime)\n                            // this.setCurrVidTime(4000)\n                            // metaCopy.noteData[currIndex].currentTime = currTime\n                            // metaCopy.noteData[lastIndex].currentTime = currTime\n                            metaCopy.noteData[lastIndex].currentTime = lastTime\n                            console.log(\"Video Switch values2:\" ,lastTime , lastIndex , currIndex, metaCopy.noteData[lastIndex].currentTime, metaCopy.noteData[currIndex].currentTime)\n\n                        }\n                    \n                        this.setState({\n                            // currPlayingVid : ref.playlist()[ref.playlist.currentIndex()],\n                            currPlayingVid : ref.playlist()[currIndex],\n                            lastPlayingVidId : this.state.currPlayingVidId,\n                            currPlayingVidId : currIndex,\n                            meta: metaCopy\n                        },\n                        ()=> {console.log(\"hiiii222\", this.state.currPlayingVid, this.state.currPlayingVidId); this.setCurrVidTime(400)}\n                        )\n          \n        });\n        // playlistitem\n        this.setState({\n            videoRef : ref\n        }\n        // , \n        // ()=>{\n        //     ref.on('playlistchange', function() {\n        //         // ref.playlist();\n        //         console.log(\"The playlist has changed!\")\n              \n        //     });\n        // }\n        )\n    }\n    getVideoRef(){\n        return this.state.videoRef\n    }\n    getCurrVidTime(data){\n        var currentTime = this.state.videoRef.currentTime()\n        return currentTime\n    }\n    setCurrVidTime(secs){\n        console.log('setting ref:', this.state.videoRef, secs)\n        if (this.state.videoRef != null){\n            this.state.videoRef.currentTime(secs)\n            console.log('setting ref2:', this.state.videoRef.currentTime())\n\n        }\n    }\n    addNote(e , videoId, newStartTime, newNoteTitle = null, newText, newBookmarked=false , newDrawn, newImages){\n        console.log(this.state.newNote)\n        var metaCopy = this.state.meta;\n                    // var currentTime  = this.getCurrVidTime()\n        // var found  = false\n        // var vId = -1\n        // var idx = 0\n        // while (!found && idx < metaCopy.noteData.length){\n        //     console.log(\"adding metaCopy: \", metaCopy.noteData[idx].videoId, videoId)\n        //     if (metaCopy.noteData[idx].videoId == videoId){\n        //         vId = idx\n        //         found = true;\n        //     }\n        //     idx+=1\n        // }\n        // if (vId !== -1){ //if the video hasn't been deleted\n        console.log(\"current playing id:\",this.state.currPlayingVidId )\n                     \n        var notesArr = this.state.meta.noteData[this.state.currPlayingVidId].notes // I NEED TO GET this.state.currPlayingVidId UPDATING. It's currenly staying at 0\n\n        var arrLength = notesArr.length\n        var index = 0\n        if (arrLength  > 0){\n            index = this.findNewNoteIdx(newStartTime, notesArr, arrLength)\n        }\n        \n        // console.log(\"currentNoteIndex: \", index)\n        metaCopy.noteData[this.state.currPlayingVidId].notes.splice(index+1, 0, \n            {   \n                noteId: metaCopy.maxNoteId+1,\n\n                startTime: newStartTime, //this should not be a Date value but instead a count of miliseconds from the start of the video\n                endTime: null,\n                noteTitle: newNoteTitle != '' ? newNoteTitle : null,\n                text: newText,\n                bookmarked: newBookmarked,\n                created : Date.now(),\n                lastUpdated : Date.now(),\n                drawn: false,\n                images: [] //this is an array of image refrences to include in this note, including if the video screen is drawn on// might separate later\n            }\n            \n            \n        );\n        metaCopy.maxNoteId = metaCopy.maxNoteId+1;\n\n\n\n        this.setState({\n            meta: metaCopy,\n            newNote: '',\n            info: this.state.newNote\n        }, ()=>{console.log(this.state.meta)} )\n\n        // }\n\n       \n\n    }\n    changeNote(noteInfo, newdata , noteIdx, dataToUpdate, videoId ){\n        // console.log(noteInfo, newdata, videoId )\n\n\n                var metaCopy = this.state.meta;\n\n                // console.log('videoId: ', videoId , 'noteIdx: ', noteIdx, metaCopy.noteData[videoId].notes[noteIdx], metaCopy.noteData[videoId].notes[noteIdx][dataToUpdate] , newdata)\n                metaCopy.noteData[videoId].notes[noteIdx][dataToUpdate] = newdata\n                metaCopy.noteData[videoId].notes[noteIdx].lastUpdated = Date.now()\n                this.setState({\n                    meta: metaCopy,\n                }, ()=>{console.log(this.state.meta)} )\n\n\n        \n    } \n    deleteNote( noteIdx,  videoId ){\n        // console.log(`deleting note: ${noteIdx} ....`, noteIdx, \"    video:\" ,  videoId )\n\n\n\n                var metaCopy = this.state.meta;\n\n                // console.log('videoId: ', videoId , 'noteIdx: ', noteIdx, metaCopy.noteData[videoId].notes[noteIdx], metaCopy.noteData[videoId].notes[noteIdx][dataToUpdate] , newdata)\n                metaCopy.noteData[videoId].notes.splice(noteIdx, 1);\n       \n                this.setState({\n                    meta: metaCopy,\n                }, ()=>{console.log(this.state.meta)} )\n\n\n        \n    }\n    deleteVideo(  e, videoId ){\n        // console.log('deleting video: ' ,  videoId )\n\n\n\n                var metaCopy = this.state.meta;\n\n                // console.log('videoId: ', videoId , 'noteIdx: ', noteIdx, metaCopy.noteData[videoId].notes[noteIdx], metaCopy.noteData[videoId].notes[noteIdx][dataToUpdate] , newdata)\n                var found  = false\n                var idx =0\n                while (!found && idx < metaCopy.noteData.length){\n                    if (metaCopy.noteData[idx].videoId == videoId){\n                        metaCopy.noteData.splice(idx, 1);\n                        found = true;\n                    }\n                    if (!found){\n                        idx+=1\n                    }\n                }\n                \n                // console.log('new deleted meta: ' , metaCopy  )\n\n                var newState = {\n                    meta: metaCopy,\n                }\n                //if we delete the one we are on, start at the beggining of the playlist\n                //if the list is empty, set it to 0 arbitrarily\n                if (idx == this.state.currPlayingVidId || metaCopy.noteData.length <= 0 ){\n                    newState.currPlayingVidId = 0\n                }\n                this.setState( newState , ()=>{console.log(this.state.meta)} )\n    }\n\n\n\n\n    addToPlaylist(e, category, fileTarget ){\n\n        // console.log(\"ADD TO PLAYLIST: \" ,category ,this.state.newVideoLink)\n\n        var type = ''\n        var src = ''\n        var vidName = ''\n        var ytVidId = null\n        var fileObj = null\n        if (category === 'web'){\n            type = 'video/youtube'\n            src = this.state.newVideoLink\n            ytVidId  =  this.YouTubeGetID(src)\n            vidName = src\n\n        }\n        else if (category === 'local'){\n            let fileName = e.target.value.split('\\\\').pop();\n            // var ext = e.target.value.substr(e.target.value.lastIndexOf('.') + 1);\n            var ext = getFileExtenstion(e.target.value)\n            type = 'video/'+ext\n            fileObj = e.target.files[0]\n            // src = this.state.newVideoLink\n            src = URL.createObjectURL(e.target.files[0])\n            // console.log(\"LOCAL vars: \", type,src)\n            vidName = fileName\n        }\n        // console.log(this.state.newNote)\n            var metaCopy = this.state.meta;\n            // var currentTime  = this.getCurrVidTime()\n            metaCopy.noteData.push(\n                {\n                    videoId: parseInt(metaCopy.maxVideoId)+1,\n                    category: category, //  web = youtube, vimero. etc, local = files\n                    type: type,\n                    url: src,\n                    videoName: vidName,\n                    ytVidId : ytVidId,\n                    fileObj : fileObj,\n                    currentTime: 0,\n                    bookmarkTotal: 0,\n                    notes: []\n                }\n            )\n            // console.log(\"meta before1: \", this.state.meta , metaCopy.maxVideoId)\n            metaCopy.maxVideoId = parseInt(metaCopy.maxVideoId)+1;\n            // console.log(\"meta before2: \", this.state.meta , metaCopy.maxVideoId)\n\n            this.setState({\n                meta: metaCopy,\n                newVideoLink : ''\n            }, ()=>{console.log( \"meta after: \",  this.state.meta)} )\n\n        // console.log(\"video added: \", this.state.newVideoLink )\n\n        //figure out if it's a youtube video or proper url\n        //if it is a proper url, add it to the Meta playlist\n        //make sure that all the video source info is included by using the youtube api to get the info\n        //make sure that trickles down to the individual playlist that we see (make sure it's inhertiing from state)\n\n    }\n\n    \n    uploadFile(e){\n        // console.log(\"UPLOADING:\", e.target.value, typeof e.target.value)\n        if (e.target.value !== \"\"){ //if a file is uploaded and user did not cancel\n          // Extract file name from path\n          let fileName = e.target.value.split('\\\\').pop();\n\n        //   console.log('fileName :', fileName, e.target.value)\n          //   var ext = fileName.substr(fileName.lastIndexOf('.') + 1);\n          var ext = getFileExtenstion(fileName)\n        \n        //   console.log('fileName :', fileName, e.target.value, ext)\n\n        //   let rowNum = e.target.id.split('-').pop();\n        //   let arrayBuffer = e.target.files[0].arrayBuffer();\n\n        this.addToPlaylist(e , 'local' , e.target )\n        }\n    }\n\n    handleInputChange(e, stateVal){\n        // var eVal = e.target.value\n        // in order to see the most current change in printing, you must include the print statment in the setState function and there must be in an anonymnous arrow function    >>> https://forum.freecodecamp.org/t/solved-this-setstate-is-updating-state-after-console-log/206985/2\n        //if we use []around the property name, we can use ES6 computed property names >>> https://stackoverflow.com/questions/29280445/reactjs-setstate-with-a-dynamic-key-name\n        this.setState({[stateVal]: e.target.value},  ()=>{console.log(`new ${stateVal} value: `, this.state[stateVal])} )\n\n    }\n    // generateUrlForPrint\n\n    acceptSpecialSymbol(e, stateVal ){\n\n        if (e.keyCode === 9){\n            e.preventDefault(); //prevent tab from focusing the next dom object\n\n        // this.setState({[stateVal]: e.target.value},  ()=>{console.log(`new ${stateVal} value: `, this.state[stateVal])} )\n            this.setState({[stateVal]: this.state[stateVal]+ String.fromCharCode(9)},  ()=>{console.log(`new ${stateVal} value: `, this.state[stateVal])} )\n\n            \n        }\n\n    }\n\n    findMostRecentNoteIdx(){\n        var currentTime = this.props.getCurrVidTime()\n        var idx=0;\n        var notesArr = this.state.meta.noteData[this.state.currPlayingVidId].notes\n        if (notesArr.length === 0){\n            return -1 //error: there are no notes\n        }\n        if (notesArr.length === 1){\n            return 0\n        }\n        while (idx < notesArr.length){\n            // console.log(\"time comparisons: \", notesArr[idx].startTime,  currentTime)\n\n            if(notesArr.length > 1 && idx < notesArr.length-1 ){\n                // console.log(\"time comparisons: \", notesArr[idx].startTime,  currentTime)\n                if ( notesArr[idx].startTime <= currentTime && notesArr[idx+1].startTime > currentTime ){\n                    return idx\n                }\n            }\n            idx+=1\n        }\n        return notesArr.length-1\n    }\n    findNewNoteIdx(ct, arr, arrLength, videoId){//binary search is probably the best bet here but we will start with linear\n        var currentTime = ct\n        // var notesArr = this.state.meta.noteData[this.state.currPlayingVidId].notes\n        var notesArr = arr\n        if (arrLength=== 0){\n            return -2 //error: there are no notes\n        }\n        if (arrLength === 1){\n            if (notesArr[0].startTime < currentTime){\n                return 0\n            }\n            else{\n                return -1 //the program adds 1 to the value so this will add the note at index 0\n            }\n        }\n        return this.recursiveBinarySearch(notesArr, currentTime, 0, arrLength-1, arrLength)\n\n    }\n\n\n    recursiveBinarySearch(arr, target,  start, end , arrLength) { \n    \n        // Base Condition \n        if (start > end){ return end\n            // if  (Math.abs(arr[start].startTime-target)<Math.abs(arr[end].startTime-target)) {\n            //     return start\n            // }\n            // else{\n            //     return end\n            // }\n        }; \n        \n        // Find the middle index \n        let mid=Math.floor((start + end)/2); \n    \n        // Compare mid with given key x \n        if( mid < arrLength-1 ){\n            if ( arr[mid].startTime <= target && arr[mid+1].startTime > target ){\n                return mid\n            }\n        }\n        else if ( mid === arrLength-1 ){\n            if ( arr[mid].startTime >= target  ){\n                return mid\n            }\n        }\n        // if (arr[mid]===comparator) return true; \n            \n        // If element at mid is greater than x, \n        // search in the left half of mid \n        if(arr[mid].startTime > target)  {\n            return this.recursiveBinarySearch(arr, target, start, mid-1, arrLength); \n        } \n        else{\n            // If element at mid is smaller than x, \n            // search in the right half of mid \n            return this.recursiveBinarySearch(arr, target, mid+1, end, arrLength); \n        }\n    \n            \n            \n    } \n  \n\n    YouTubeGetID(url){\n        url = url.split(/(vi\\/|v%3D|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n        // return undefined !== url[2]?url[2].split(/[^0-9a-z_\\-]/i)[0]:url[0];\n        return undefined !== url[2]?url[2].split(/[^0-9a-z_-]/i)[0]:url[0]; //remove the escape because React suggested that it's unnecessary\n    }\n\n    loadProject(e, val ){\n        // return zip.files[filename].async('blob').then(function (fileData) {\n        //     return new File([fileData], filename);\n        // })\n        // Object.keys(contents.files).forEach(function(filename) {\n        //     zip.file(filename).async('nodebuffer').then(function(content) {\n        //         var dest = path + filename;\n        //         fs.writeFileSync(dest, content);\n        //     });\n\n        var fileArr = e.target.files;\n\n        // Object.keys(e.target.files).forEach(function(filename) {\n        //     zip.file(filename).async('nodebuffer').then(function(content) {\n        //         var dest = path + filename;\n        //         fs.writeFileSync(dest, content);\n        //     });\n        // })\n        var i =0 ;\n        var metaIdx = 0;\n        while(i<fileArr.length){\n            // console.log(\"uploaded file: \" , e.target.files[i].name )\n            var fileName = e.target.files[i].name\n            var ext = getFileExtenstion(fileName)\n            var fileStatus = ACCEPTED_FILE_EXTENSIONS[ext]\n            if (fileStatus !== undefined && fileStatus.valid ){\n                // console.log(\"accepted file type: \" , fileName )\n                switch (fileStatus.type){\n                    case 'video':\n                        break;\n                    case 'image':\n                        break;\n                    case 'text':\n                        if (fileName === 'meta.txt'){\n                            metaIdx= i\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n            i+=1\n        }\n        //more reference material: ['https://www.geeksforgeeks.org/how-to-read-a-local-text-file-using-javascript/','https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsText','https://developer.mozilla.org/en-US/docs/Web/API/Blob/text']\n        /*Step 1:   trigger a file read with an onChange event on the input div you use to upload the files\n                    the files from all the folders will be decentralized and kind of floating in an array.\n                    choose the index of the file you want to read fron withibn the files property of your event.target \n                    that object is actually of type blob (at least when I console.logged it's typeof, it was)\n                    It's also called a File when inspecting                                                                   */\n        var fileObj = e.target.files[metaIdx] //note that there are going to be files in there like .DS_Store that you don't want \n                                        //this file happens to be the meta data\n\n        /*  to confirm the identity of a file, you can log it's 'name' property \n            Other info you can glean (here is a real example of ```e.target.files[0]``` logged): \n                    {name: \".DS_Store\", lastModified: 1597600999440, lastModifiedDate: Sun Aug 16 2020 14:03:19 GMT-0400 (Eastern Daylight Time), webkitRelativePath: \"VidNotes 1597600971230/.DS_Store\", size: 6148, …}  */\n\n\n        var src = URL.createObjectURL(e.target.files[0]) //if you do this, the output is a string that may be used as a link\n        // console.log (\"PROJECT UPLOAD: \", e.target.files , fileObj, typeof fileObj, src, typeof src, e.target.files[1].name )\n        \n\n        //Step 2:   generate the FileReader object (here named fr)\n        var fr=new FileReader();\n       \n        /*Step 3:   attach onload or onloadend eventlisteners to the new reader\n                    These should fire when they detect that the file contents are done load ing and ready for viewing/accessing\n                    Note: .on() events like this wont work:                                                                         */\n                            // fr.on('loadend', ()=> {\n                            //     this.setState({\n                            //         // currPlayingVid : ref.playlist()[ref.playlist.currentIndex()],\n                            //         fileContents: fr.result\n                            //     },\n                            //     ()=> {\n                            //             console.log(\"hiiii\", this.state.currPlayingVid)\n                            //             fr.readAsText(fileObj);\n                            //         }\n                            //     )\n        fr.onloadend=()=>{  \n            var result = fr.result\n            var resultJSON = JSON.parse(fr.result)\n            this.setState({\n                backupMeta: this.state.meta, \n                meta : resultJSON,\n                fileContents: result,    //Step 4:   set up actions to take with fr.result\n                                            //          When the event listener fires, fr.result is poopulated with the text from the file it was read from\n                                            //          my React.js appreach to rendering this would be to set it to state and have the state variable referenced in the JSX\n            },\n            ()=> {\n                    console.log(\"hiiii\", this.state.fileContents)\n                }\n            )\n        } \n        fr.readAsText(fileObj);  //Step 5   after establishing the listener, tell it to read the file we picked earlier\n    }\n    loadBackupProject(e, val ){\n        this.setState({\n            backupMeta: this.state.meta, \n            meta : this.state.backupMeta,\n        })\n    }\n    downloadProject(gdrive = false){\n\n\n        let zip = new JSZip();\n        var Img = zip.folder(\"Images\");\n        var Videos = zip.folder(\"Videos\");\n        var Originals = Videos.folder(\"Originals\");\n        var Drawn = Videos.folder(\"Drawn\");\n        var Data= zip.folder(\"Data\");\n        var MetaFiles= zip.folder(\"Meta\");\n\n        MetaFiles.file(\"meta.txt\", JSON.stringify(this.state.meta)  );\n     \n        zip.generateAsync({type: \"blob\"}).then(function(content) {\n            const filename = 'VidNotes '+Date.now()+'.zip'\n            if (gdrive){\n                // return URL.createObjectURL(content)\n                // var folderId = '0BwwA4oUTeiV1TGRPeTVjaWRDY1E';\n                // var fileMetadata = {\n                // 'name': 'photo.jpg',\n                // parents: [folderId]\n                // };\n                // var media = {\n                // mimeType: 'application/zip',\n                // body: fs.createReadStream('files/photo.zip')\n                // };\n                // drive.files.create({\n                // resource: fileMetadata,\n                // media: media,\n                // fields: 'id'\n                // }, function (err, file) {\n                // if (err) {\n                //     // Handle error\n                //     console.error(err);\n                // } else {\n                //     console.log('File Id: ', file.id);\n                // }\n                // });\n            }\n            else{\n                FileSaver.saveAs(content, filename);\n            }\n        }); \n    }\n    // gdriveSave(gdrive = false){\n    //     //need Drive API to do this: https://developers.google.com/drive/api/v3/quickstart/nodejs\n\n\n    //     // let zip = new JSZip();\n    //     // var Img = zip.folder(\"Images\");\n    //     // var Videos = zip.folder(\"Videos\");\n    //     // var Originals = Videos.folder(\"Originals\");\n    //     // var Drawn = Videos.folder(\"Drawn\");\n    //     // var Data= zip.folder(\"Data\");\n    //     // var MetaFiles= zip.folder(\"Meta\");\n\n    //     // MetaFiles.file(\"meta.txt\", JSON.stringify(this.state.meta)  );\n     \n    //     // zip.generateAsync({type: \"blob\"}).then(function(content) {\n    //     //     const filename = 'VidNotes '+Date.now()+'.zip'\n    //         // if (gdrive){\n    //             // return URL.createObjectURL(content)\n    //             var fileMetadata = {\n    //                 'name': 'Invoices',\n    //                 'mimeType': 'application/vnd.google-apps.folder'\n    //             };\n    //             drive.files.create({\n    //             resource: fileMetadata,\n    //             fields: 'id'\n    //             }, function (err, file) {\n    //             if (err) {\n    //                 // Handle error\n    //                 console.error(err);\n    //             } else {\n    //                 console.log('Folder Id: ', file.id);\n    //             }\n    //             });\n\n    //             var folderId = '0BwwA4oUTeiV1TGRPeTVjaWRDY1E';\n    //             var fileMetadata = {\n    //             'name': 'photo.jpg',\n    //             parents: [folderId]\n    //             };\n    //             var media = {\n    //             mimeType: 'application/zip',\n    //             body: fs.createReadStream('files/photo.zip')\n    //             };\n    //             drive.files.create({\n    //             resource: fileMetadata,\n    //             media: media,\n    //             fields: 'id'\n    //             }, function (err, file) {\n    //             if (err) {\n    //                 // Handle error\n    //                 console.error(err);\n    //             } else {\n    //                 console.log('File Id: ', file.id);\n    //             }\n    //             });\n    //         // }\n    //     //     else{\n    //     //         FileSaver.saveAs(content, filename);\n    //     //     }\n    //     // }); \n    // }\n\n    testConsoleLog(message){\n        console.log(\"clicked button!\") \n    }\n    printPlayer(){\n        console.log(this.state.videoRef)\n    }\n\n    render() {\n        const videoJsOptions = {\n            autoplay: true,\n            controls: true,\n            //\n       \n                // techOrder: ['youtube'],\n                // sources: [\n                //   {\n                //     type: 'video/youtube',\n                //     src: 'https://www.youtube.com/watch?v=TeccAtqd5K8' //note that there will be a benign Youtube server side error saying that the host don't match but there is supposedly nothing to worry about this according to stack overflow: https://stackoverflow.com/questions/47833687/youtube-api-failed-to-execute-postmessage-on-domwindow\n                //     // src: 'https://www.youtube.com/embed/HIbAz29L-FA?modestbranding=1&playsinline=0&showinfo=0&enablejsapi=1&origin=http://localhost:3000&widgetid=1',\n                //     // enablejsapi:1,\n                //     // origin:'https://www.youtube.com'\n                //   }\n                // ]\n          }\n          \n        var playlistJSON = [];\n        this.state.meta.noteData.forEach((videoJSON) => {\n                // if (videoJSON.category === 'web'){\n                    playlistJSON.push({\n                        videoId: videoJSON.videoId,\n                        currentTime: videoJSON.currentTime,\n                        name: videoJSON.videoName,\n                        sources: [{\n                            src: videoJSON.url,\n                            type: videoJSON.type\n                        }],\n                        poster: 'http://media.w3.org/2010/05/sintel/poster.png',\n                        thumbnail: [\n                            {\n                              srcset: 'https://helpx.adobe.com/content/dam/help/en/stock/how-to/visual-reverse-image-search-v2_297x176.jpg',\n                              type: 'image/jpeg',\n                              media: '(min-width: 400px;)'\n                            //   media: 'max-width: 40px;'\n                            },\n                            {\n                              src: 'https://helpx.adobe.com/content/dam/help/en/stock/how-to/visual-reverse-image-search-v2_297x176.jpg'\n                            }\n                          ]\n                        //   thumbnail: [\n                        //     {\n                        //       srcset: 'test/example/oceans.jpg',\n                        //       type: 'image/jpeg',\n                        //       media: '(min-width: 400px;)'\n                        //     },\n                        //     {\n                        //       src: 'test/example/oceans-low.jpg'\n                        //     }\n                        //   ]\n                    })\n            }\n        )\n       \n\n       \n        // console.log(\"playlistJSON:\", playlistJSON, process.env.REACT_APP_TEST_ENV_VAR)\n    \n        \n        \n       \n        return(\n            <div className=\"tripleColumnContainer\" >\n                <div className='videoPlayer' >\n                    \n\n                \n\n                    <VideoPlayer { ...videoJsOptions } setVidRef = {this.setVideoRef}  test = \"hi\" />\n                                        {/* <button onClick={this.getVideoRef}>getVideoRef</button>\n                                        <button onClick={this.getCurrVidTime}>Get current Video Time [PC] </button>\n                                        <button onClick={ () => this.setCurrVidTime(180)}>Set current Video Time to 3 min[PC] </button> */}\n                    {this.state.videoRef !== null && this.state.videoRef !== undefined && {playlistJSON}!== undefined && <DraggablePlaylistContainer player={this.state.videoRef} playlist={playlistJSON} test= 'this should APPEAR' currentlyPlayingId = {this.state.currPlayingVidId} deleteVideo={this.deleteVideo} currentTime={400} /> }\n                    <div className=\"playListInputContainer\">\n                        <input onChange={(e, note) => this.handleInputChange(e, 'newVideoLink')}  className='playlistInputField' value={this.state.newVideoLink}  placeholder= \"video url...\"></input> \n                        <button className=\"playlistButton\" onClick={(e , type) => this.addToPlaylist(e , 'web')} type='submit' >Add to Playlist</button>\n                    </div>\n\n                    {/* by including the state variable as a value for the input/textarea field, we make sure it clears out if we set the state variable to be empty because then on the rerender, it repopulates as a empty */}\n                    {/* <textarea onChange={(e, note) => this.handleInputChange(e, 'newNote')} onKeyDown={ (e, state) => this.acceptSpecialSymbol(e, 'newNote')} className='NoteInputField' value={this.state.newNote} ></textarea> <button onClick={this.addNote} type='submit' >Submit Note</button> */}\n\n\n                    {/* this is how to create an HTML a tag that will download a local app file*/}\n                    {/* <a href={testFile} download=\"testFile.txt\">{testFile}Hiii</a> */}\n                    {/* <button onClick={downloadNotes}>Download Default Info </button> */}\n                    <button onClick={this.downloadProject}>Download Info </button>\n                    <button onClick={this.loadBackupProject}>Revert to Last Project</button>\n                    <input onChange={(e , type) => this.loadProject(e , 'local')} directory=\"\" webkitdirectory=\"\" mozdirectory=\"\" type=\"file\" />\n               \n\n                \n                    \n                    {/* <div>Field Import:<input onChange={(e , type) => this.loadProject(e , 'local')} directory=\"\" webkitdirectory=\"\" mozdirectory=\"\" type=\"file\" /></div> */}\n                    {/* for some reason, it does accept any file type other than directories if I choose webkitdirectory=\"\" but it works if I only put directory  and moz directory*/}\n                    {/* allowdir is something I found here: 'https://stackoverflow.com/questions/42633306/how-to-allow-the-user-to-pick-any-file-or-directory-in-an-input-type-file-ta'    But, I don't think it's needed, actually. */}\n                    <div    className=\"g-savetodrive\"\n                            data-src={testVideo2}\n                            data-filename=\"My Statement.mp4\"\n                            data-sitename=\"My Company Name\">\n                    </div>\n                    {/* <NoteTaker  setCurrVidTime = {this.setCurrVidTime} \n                                getCurrVidTime = {this.getCurrVidTime}\n                                addNote ={this.addNote}\n                                videoId = {this.state.currPlayingVidId} \n                                defaults = {{    noteTitle: '',\n                                                title: '',\n                                                currentNoteTime: null,\n                                                bookmarked: false }}\n                                // hidden= {this.state.meta.noteData.length <= 0}\n                    /> */}\n                    \n                    {this.state.meta.noteData.length > 0 &&\n                    <NoteTaker  setCurrVidTime = {this.setCurrVidTime} \n                                getCurrVidTime = {this.getCurrVidTime}\n                                addNote ={this.addNote}\n                                videoId = {this.state.currPlayingVidId} \n                                defaults = {{    noteTitle: '',\n                                                title: '',\n                                                currentNoteTime: null,\n                                                bookmarked: false }}\n                    />\n                    }\n\n                    {/* <pre className=\"testerPre\" >{this.state.fileContents}</pre> */}\n\n                    {/* \n                        React as of version 16 STILL has not fully accounte4d for directory imports.\n                        One person (bheptinh --- commented on Dec 18, 2018 ) from this github issue has revealed that it works for them if they add empty strings to the properties, however. \n                        Source: https://github.com/facebook/react/issues/3468#issuecomment-448336672 \n                    */}\n            \n\n\n\n                </div>\n                {/* <div className='playList' >\n                \n\n\n                </div> */}\n                    \n                <div className='notes'>\n                    <div>{this.state.currPlayingVid !== {} && console.log('current video: ',this.state.currPlayingVid, this.state.currPlayingVid.sources)}</div>\n\n                    {/* Wait until the currPlayingVid has been set to a non-empty name value to show a name and show it as long as it's not null. If it is null, substitute the 'Untitled Video' for null */}\n                    {/* <div className=\"noteSectionVideoTitle\">{this.state.currPlayingVid != {} && (this.state.currPlayingVid.name != null ? this.state.currPlayingVid.name : 'Untitled Video') }</div>\n                    <div className=\"noteSectionVideoTitle\">{this.state.currPlayingVid != {} &&  this.state.currPlayingVid.sources != undefined && (this.state.currPlayingVid.sources[0].type != 'video/mp4' ? this.state.currPlayingVid.sources[0].src : 'Local File') }</div> */}\n                    <NoteContainer id=\"list\" \n                    itemList = {this.state.meta.noteData[this.state.currPlayingVidId]} \n                    \n\n                    setCurrVidTime = {this.setCurrVidTime}\n                    getCurrVidTime = {this.getCurrVidTime}\n                    changeNote = {this.changeNote}\n                    deleteNote= {this.deleteNote}\n                    />\n\n                    <form>\n                        <input type='button' name='print' value=\"Print Page\" onClick={()=>{window.print()}}/>\n                    </form>\n\n                </div>\n                {/* {this.setCurrVidTime(180)} */}\n               \n            </div>\n        \n        );\n    }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PageContainer from './Containers/PageContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <PageContainer/>\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}